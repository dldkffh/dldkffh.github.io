"use strict";(self.webpackChunkdldkffh_github_io=self.webpackChunkdldkffh_github_io||[]).push([[9156],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=a,f=u["".concat(s,".").concat(c)]||u[c]||d[c]||l;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={title:"\uc815\ub82c \uac00\uc7a5 \ud070 \uc218",authors:"dldkffh",tags:["\uc815\ub82c","\uc54c\uace0\ub9ac\uc998","python3","\ud504\ub85c\uadf8\ub798\uba38\uc2a4","\ubb38\uc81c"],enableComments:!0},i=void 0,o={permalink:"/2023/06/30/programmers-42746",source:"@site/blog/2023-06-30-programmers-42746.md",title:"\uc815\ub82c \uac00\uc7a5 \ud070 \uc218",description:"\ud504\ub85c\uadf8\ub798\uba38\uc2a4 \ucf54\ub529\ud14c\uc2a4\ud2b8 \uace0\ub4dd\uc810 Kit \uc815\ub82c \uac00\uc7a5 \ud070 \uc218",date:"2023-06-30T00:00:00.000Z",formattedDate:"June 30, 2023",tags:[{label:"\uc815\ub82c",permalink:"/tags/\uc815\ub82c"},{label:"\uc54c\uace0\ub9ac\uc998",permalink:"/tags/\uc54c\uace0\ub9ac\uc998"},{label:"python3",permalink:"/tags/python-3"},{label:"\ud504\ub85c\uadf8\ub798\uba38\uc2a4",permalink:"/tags/\ud504\ub85c\uadf8\ub798\uba38\uc2a4"},{label:"\ubb38\uc81c",permalink:"/tags/\ubb38\uc81c"}],readingTime:3.12,hasTruncateMarker:!0,authors:[{name:"dldkffh",url:"https://github.com/dldkffh",imageURL:"https://avatars.githubusercontent.com/u/79070302",key:"dldkffh"}],frontMatter:{title:"\uc815\ub82c \uac00\uc7a5 \ud070 \uc218",authors:"dldkffh",tags:["\uc815\ub82c","\uc54c\uace0\ub9ac\uc998","python3","\ud504\ub85c\uadf8\ub798\uba38\uc2a4","\ubb38\uc81c"],enableComments:!0},prevItem:{title:"\uc815\ub82c H-Index",permalink:"/2023/07/02/programmers-42747"},nextItem:{title:"Sorting(\uc815\ub82c)",permalink:"/2023/06/27/visualgo-sorting"}},s={authorsImageUrls:[void 0]},p=[{value:"\ud504\ub85c\uadf8\ub798\uba38\uc2a4 \ucf54\ub529\ud14c\uc2a4\ud2b8 \uace0\ub4dd\uc810 Kit \uc815\ub82c \uac00\uc7a5 \ud070 \uc218",id:"\ud504\ub85c\uadf8\ub798\uba38\uc2a4-\ucf54\ub529\ud14c\uc2a4\ud2b8-\uace0\ub4dd\uc810-kit-\uc815\ub82c-\uac00\uc7a5-\ud070-\uc218",level:3},{value:"\ubb38\uc81c \uc124\uba85",id:"\ubb38\uc81c-\uc124\uba85",level:4},{value:"\uc81c\ud55c\uc0ac\ud56d",id:"\uc81c\ud55c\uc0ac\ud56d",level:4},{value:"\ud480\uc774 \ud3ec\uc778\ud2b8",id:"\ud480\uc774-\ud3ec\uc778\ud2b8",level:4},{value:"\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ucd94\uac00",id:"\ud14c\uc2a4\ud2b8-\ucf00\uc774\uc2a4-\ucd94\uac00",level:4},{value:"solution.py",id:"solutionpy",level:4},{value:"\ubcd1\ud569 \uc815\ub82c\ub85c \uad6c\ud604\uc2dc",id:"\ubcd1\ud569-\uc815\ub82c\ub85c-\uad6c\ud604\uc2dc",level:5},{value:"\ubc84\ube14 \uc815\ub82c\ub85c \uad6c\ud604\uc2dc",id:"\ubc84\ube14-\uc815\ub82c\ub85c-\uad6c\ud604\uc2dc",level:5}],m={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\ud504\ub85c\uadf8\ub798\uba38\uc2a4-\ucf54\ub529\ud14c\uc2a4\ud2b8-\uace0\ub4dd\uc810-kit-\uc815\ub82c-\uac00\uc7a5-\ud070-\uc218"},(0,a.kt)("a",{parentName:"h3",href:"https://school.programmers.co.kr/learn/courses/30/lessons/42746"},"\ud504\ub85c\uadf8\ub798\uba38\uc2a4 \ucf54\ub529\ud14c\uc2a4\ud2b8 \uace0\ub4dd\uc810 Kit \uc815\ub82c \uac00\uc7a5 \ud070 \uc218")),(0,a.kt)("h4",{id:"\ubb38\uc81c-\uc124\uba85"},"\ubb38\uc81c \uc124\uba85"),(0,a.kt)("p",null,"0 \ub610\ub294 \uc591\uc758 \uc815\uc218\uac00 \uc8fc\uc5b4\uc84c\uc744 \ub54c, \uc815\uc218\ub97c \uc774\uc5b4 \ubd99\uc5ec \ub9cc\ub4e4 \uc218 \uc788\ub294 \uac00\uc7a5 \ud070 \uc218\ub97c \uc54c\uc544\ub0b4 \uc8fc\uc138\uc694."),(0,a.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4, \uc8fc\uc5b4\uc9c4 \uc815\uc218\uac00 ",(0,a.kt)("inlineCode",{parentName:"p"},"[6, 10, 2]"),"\ub77c\uba74 ",(0,a.kt)("inlineCode",{parentName:"p"},"[6102, 6210, 1062, 1026, 2610, 2106]"),"\ub97c \ub9cc\ub4e4 \uc218 \uc788\uace0, \uc774\uc911 \uac00\uc7a5 \ud070 \uc218\ub294 6210\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"0 \ub610\ub294 \uc591\uc758 \uc815\uc218\uac00 \ub2f4\uae34 \ubc30\uc5f4 ",(0,a.kt)("inlineCode",{parentName:"p"},"numbers"),"\uac00 \ub9e4\uac1c\ubcc0\uc218\ub85c \uc8fc\uc5b4\uc9c8 \ub54c, \uc21c\uc11c\ub97c \uc7ac\ubc30\uce58\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\ub294 \uac00\uc7a5 \ud070 \uc218\ub97c \ubb38\uc790\uc5f4\ub85c \ubc14\uafb8\uc5b4 ",(0,a.kt)("inlineCode",{parentName:"p"},"return")," \ud558\ub3c4\ub85d ",(0,a.kt)("inlineCode",{parentName:"p"},"solution")," \ud568\uc218\ub97c \uc791\uc131\ud574\uc8fc\uc138\uc694."),(0,a.kt)("h4",{id:"\uc81c\ud55c\uc0ac\ud56d"},"\uc81c\ud55c\uc0ac\ud56d"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"numbers"),"\uc758 \uae38\uc774\ub294 1 \uc774\uc0c1 100,000 \uc774\ud558\uc785\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"numbers"),"\uc758 \uc6d0\uc18c\ub294 0 \uc774\uc0c1 1,000 \uc774\ud558\uc785\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc815\ub2f5\uc774 \ub108\ubb34 \ud074 \uc218 \uc788\uc73c\ub2c8 \ubb38\uc790\uc5f4\ub85c \ubc14\uafb8\uc5b4 ",(0,a.kt)("inlineCode",{parentName:"li"},"return")," \ud569\ub2c8\ub2e4.")),(0,a.kt)("h4",{id:"\ud480\uc774-\ud3ec\uc778\ud2b8"},"\ud480\uc774 \ud3ec\uc778\ud2b8"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"functools.cmp_to_key"),"\ub97c \uc0ac\uc6a9\ud55c\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc5d0 \uc720\uc758")),(0,a.kt)("h4",{id:"\ud14c\uc2a4\ud2b8-\ucf00\uc774\uc2a4-\ucd94\uac00"},"\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ucd94\uac00"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"numbers(int[])"),(0,a.kt)("th",{parentName:"tr",align:null},"return"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[0, 0, 0, 0]"),(0,a.kt)("td",{parentName:"tr",align:null},'"0"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[898, 89]"),(0,a.kt)("td",{parentName:"tr",align:null},'"89898"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[1000, 999]"),(0,a.kt)("td",{parentName:"tr",align:null},'"9991000"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[333, 334, 3, 33, 4, 35, 30, 55, 31]"),(0,a.kt)("td",{parentName:"tr",align:null},'"554353343333333130"')))),(0,a.kt)("h4",{id:"solutionpy"},"solution.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:'showLineNumbers title="python3"',showLineNumbers:!0,title:'"python3"'},"from functools import cmp_to_key\n\ndef sort(a, b):\n    if int(a + b) > int(b + a):\n        return -1\n    else:\n        return 1\n\n\ndef solution(numbers):\n    answer = ''\n\n    case = list(map(lambda x: str(x), numbers))\n    case = sorted(case, key=cmp_to_key(sort))\n\n    if case[0] == '0':\n        return '0'\n\n    for i in case:\n        answer += i\n\n    return answer\n")),(0,a.kt)("h5",{id:"\ubcd1\ud569-\uc815\ub82c\ub85c-\uad6c\ud604\uc2dc"},"\ubcd1\ud569 \uc815\ub82c\ub85c \uad6c\ud604\uc2dc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud1b5\uacfc\ub294 \ub418\uc9c0\ub9cc \uacfc\uc815\uc774 \ubcf5\uc7a1\ud558\uace0 ",(0,a.kt)("inlineCode",{parentName:"li"},"functools.cmp_to_key"),"\uc744 \uc0ac\uc6a9\ud588\uc744 \ub54c\ubcf4\ub2e4 \ub290\ub9ac\ub2e4.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:'showLineNumbers title="python3"',showLineNumbers:!0,title:'"python3"'},"def merge(array, low, mid, high):\n    N = high - low + 1\n    temp = [''] * N\n    left = low\n    right = mid + 1\n    bid = 0\n\n    while left <= mid and right <= high:\n        if int(array[left] + array[right]) > int(array[right] + array[left]):\n            temp[bid] = array[left]\n            left += 1\n        else:\n            temp[bid] = array[right]\n            right += 1\n        bid += 1\n\n    while left <= mid:\n        temp[bid] = array[left]\n        bid += 1\n        left += 1\n    while right <= high:\n        temp[bid] = array[right]\n        bid += 1\n        right += 1\n\n    for i in range(0, N):\n        array[low + i] = temp[i]\n\n    return array\n\n\ndef merge_sort(array, low, high):\n    if low < high:\n        mid = (low + high) // 2\n        array = merge_sort(array, low, mid)\n        array = merge_sort(array, mid + 1, high)\n        array = merge(array, low, mid, high)\n\n    return array\n\n\ndef solution(numbers):\n    answer = ''\n\n    case = list(map(lambda x: str(x), numbers))\n\n    merge_sort(case, 0, len(numbers)-1)\n\n    if case[0] == '0':\n        return '0'\n\n    for i in case:\n        answer += i\n\n    return answer\n")),(0,a.kt)("h5",{id:"\ubc84\ube14-\uc815\ub82c\ub85c-\uad6c\ud604\uc2dc"},"\ubc84\ube14 \uc815\ub82c\ub85c \uad6c\ud604\uc2dc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc2dc\uac04 \ucd08\uacfc")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:'showLineNumbers title="python3"',showLineNumbers:!0,title:'"python3"'},"def solution(numbers):\n    answer = ''\n\n    test = list(map(lambda x: str(x), numbers))\n\n    test.sort(reverse=True)\n\n    n = 1\n    while n > 0:\n        if n > 0:\n            n = 0\n        for i in range(len(test)-1):\n            if int(test[i+1] + test[i]) > int(test[i] + test[i+1]):\n                test[i], test[i+1] = test[i+1], test[i]\n                n += 1\n\n    if test[0] == '0':\n        return '0'\n\n    for i in test:\n        answer += i\n\n    return answer\n")))}d.isMDXComponent=!0}}]);