<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dldkffh Blog</title>
        <link>https://dldkffh.github.io/</link>
        <description>dldkffh Blog</description>
        <lastBuildDate>Wed, 14 Feb 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ko</language>
        <item>
            <title><![CDATA[FHRPs - HSRP, VRRP, GLBP]]></title>
            <link>https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp</link>
            <guid>https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp</guid>
            <pubDate>Wed, 14 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[FHRPs(First-Hop Redundancy Protocols)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="fhrpsfirst-hop-redundancy-protocols">FHRPs(First-Hop Redundancy Protocols)<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#fhrpsfirst-hop-redundancy-protocols" class="hash-link" aria-label="FHRPs(First-Hop Redundancy Protocols)에 대한 직접 링크" title="FHRPs(First-Hop Redundancy Protocols)에 대한 직접 링크">​</a></h3>
<ul>
<li>중복되고 투명한 게이트웨이 연결을 보장하는 데 사용</li>
<li>서브 네트워크에서 2개 이상의 라우터가 해당 주소에 대해 백업할 수 있도록 함으로써 기본 게이트웨이를 보호하기 위한 컴퓨터 네트워크 프로토콜 빌드</li>
<li>백업 라우터는 라우터 충돌 시 몇 초 내에 활성 라우터를 대체</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="이중화-구성-이유">이중화 구성 이유<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#%EC%9D%B4%EC%A4%91%ED%99%94-%EA%B5%AC%EC%84%B1-%EC%9D%B4%EC%9C%A0" class="hash-link" aria-label="이중화 구성 이유에 대한 직접 링크" title="이중화 구성 이유에 대한 직접 링크">​</a></h4>
<ul>
<li>Load balancing : 똑같은 기능을 수행하는 장비를 여러 개 구성하여 네트워크 부하를 분산</li>
<li>Failover : 하나의 장비가 죽었을 때 다른 장비로 전환되어 서비스 단절 최소화</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="first-hop">First Hop<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#first-hop" class="hash-link" aria-label="First Hop에 대한 직접 링크" title="First Hop에 대한 직접 링크">​</a></h4>
<ul>
<li>PC가 트래픽을 보내는 네트워크에서 첫 홉으로 여겨지는 기본 라우터를 의미</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hsrphot-standby-router-protocol">HSRP(Hot Standby Router Protocol)<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#hsrphot-standby-router-protocol" class="hash-link" aria-label="HSRP(Hot Standby Router Protocol)에 대한 직접 링크" title="HSRP(Hot Standby Router Protocol)에 대한 직접 링크">​</a></h3>
<ul>
<li>시스코 전용 프로토콜</li>
<li>first-hop device의 failover를 routing redundancy를 통해서 해결</li>
<li>기본적으로 HSRP로 구성된 router 한 대는 active device로 동작<!-- -->
<ul>
<li>packet forwarding을 담당</li>
</ul>
</li>
<li>다른 한 대의 router는 active router가 문제가 생길 경우 failover할 수 있도록 standby 상태로 운영</li>
</ul>
<table><thead><tr><th></th><th>HSRPv1</th><th>HSRPv2</th></tr></thead><tbody><tr><td>Timers</td><td>Not support millisecond timer</td><td>Supports millisecond timer</td></tr><tr><td>Group range</td><td>0~255</td><td>0~4095</td></tr><tr><td>Multicast address</td><td>224.0.0.2</td><td>224.0.0.102</td></tr><tr><td>MAC address range</td><td>0000.0C07.ACxy, xy값은 HSRP group number</td><td>0000.0C9F.F000~0000.9C9F.FFFF</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vrrpvirtual-router-redundancy-protocol-가상-라우터-장애-복구-프로토콜">VRRP(Virtual Router Redundancy Protocol, 가상 라우터 장애 복구 프로토콜)<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#vrrpvirtual-router-redundancy-protocol-%EA%B0%80%EC%83%81-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EC%9E%A5%EC%95%A0-%EB%B3%B5%EA%B5%AC-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" class="hash-link" aria-label="VRRP(Virtual Router Redundancy Protocol, 가상 라우터 장애 복구 프로토콜)에 대한 직접 링크" title="VRRP(Virtual Router Redundancy Protocol, 가상 라우터 장애 복구 프로토콜)에 대한 직접 링크">​</a></h3>
<ul>
<li>VRRP는 주로 Failover를 목적으로 Master / Slave 장비 간의 전환을 위해 사용됨</li>
<li>표준화된 FHRP이지만 약간 다르게 작동</li>
<li><strong>멀티 벤더 환경</strong>에서 사용 가능</li>
<li>XX가 VRRP 그룹 번호의 헥스 값인 멀티캐스트 가상 MAC 0000.5e00.01XX를 사용</li>
<li>IOS 객체 추적을 사용하여 인터페이스 상태를 추적</li>
<li><strong>VRRP Master</strong>는 <strong>HSRP Active</strong>와 동일함</li>
<li>VRRP 그룹 IP는 VRRP 라우터 중 하나의 인터페이스 주소이며 가상 IP가 아님</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="master-장비의-선출-조건">Master 장비의 선출 조건<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#master-%EC%9E%A5%EB%B9%84%EC%9D%98-%EC%84%A0%EC%B6%9C-%EC%A1%B0%EA%B1%B4" class="hash-link" aria-label="Master 장비의 선출 조건에 대한 직접 링크" title="Master 장비의 선출 조건에 대한 직접 링크">​</a></h4>
<ul>
<li>VIP와 RIP가 같은 장비</li>
<li>VRRP Priority (우선순위) 값이 큰 장비 (기본값 : 100)</li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9A%B0%ED%8C%85_%EC%A0%95%EB%B3%B4_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" target="_blank" rel="noopener noreferrer">RIP</a>의 주소가 큰 장비</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="glbpgateway-load-balancing-protocol">GLBP(Gateway Load Balancing Protocol)<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#glbpgateway-load-balancing-protocol" class="hash-link" aria-label="GLBP(Gateway Load Balancing Protocol)에 대한 직접 링크" title="GLBP(Gateway Load Balancing Protocol)에 대한 직접 링크">​</a></h3>
<ul>
<li>GLBP는 HSRP와 마찬가지로 시스코 독점</li>
<li>GLBP와 HSRP/VRRP의 차이점은 라우터 중복성 외에도 부하 균형 기능을 추가한다는 것</li>
<li>Group마다 Virtual Router가 1개 생성<!-- -->
<ul>
<li>Virtual Router 하나 당 Virtual IP 주소가 하나 할당</li>
<li>하나의 Virtual IP에 Virtual MAC 주소가 기본적으로 4개가 생성</li>
<li>결과적으로 4대의 Gateway 장비를 동시에 사용하는 것이 가능</li>
</ul>
</li>
<li>GLBP는 GLBP 그룹의 각 라우터를 가상 MAC 주소를 할당하는 AVG(Active Virtual Gateway)를 가짐<!-- -->
<ul>
<li>포맷 : 0007.b400.XXYY<!-- -->
<ul>
<li>XX가 GLBP 그룹이고 YY가 각 라우터마다 다른 수</li>
</ul>
</li>
</ul>
</li>
<li>기본 게이트웨이의 가상 IP 주소에 대한 클라이언트 ARP가 해당 그룹에서 가능한 4개의 라우터 중 하나에 가상 MAC 주소로 응답<!-- -->
<ul>
<li>라운드 로빈 패션 호스트 트래픽에서 그렇게 함으로써 4개의 라우터 모두에 걸쳐 균형 잡힌 부하가 공급</li>
</ul>
</li>
<li>AVG(Active Virtual Gateway)<!-- -->
<ul>
<li>AVF 중 하나의 장치를 AVG(Active Virtual Gateway)로 선출</li>
<li>AVG는 AVF의 가상 MAC 주소를 관리</li>
<li>내부 End Device가 Gateway에 대한 ARP를 요청하는 경우 Loadbalancing 방식에 하나의 AVF 가상 MAC 주소를 응답</li>
</ul>
</li>
<li>3가지 방식의 Load-balancing 지원<!-- -->
<ul>
<li>Round Robin (Default)</li>
<li>Weighted (가중치 방식)</li>
<li>Host-dependent</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="avg-선출-조건">AVG 선출 조건<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#avg-%EC%84%A0%EC%B6%9C-%EC%A1%B0%EA%B1%B4" class="hash-link" aria-label="AVG 선출 조건에 대한 직접 링크" title="AVG 선출 조건에 대한 직접 링크">​</a></h4>
<ul>
<li>GLBP Priority 값이 높은 장비가 선출 (기본값: 100)</li>
<li>GLBP Priority 값이 동일한 경우 실제 IP 주소의 숫자가 큰 장비가 선출</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/14/fhrps-hsrp-vrrp-glbp#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ethan-world.tistory.com/" target="_blank" rel="noopener noreferrer">https://ethan-world.tistory.com/</a></li>
<li><a href="https://www.cisco.com/c/en/us/products/ios-nx-os-software/first-hop-redundancy-protocol-fhrp/index.html" target="_blank" rel="noopener noreferrer">https://www.cisco.com/c/en/us/products/ios-nx-os-software/first-hop-redundancy-protocol-fhrp/index.html</a></li>
<li><a href="https://bethepacketsite.wordpress.com/2016/03/24/fhrps-hsrp/" target="_blank" rel="noopener noreferrer">https://bethepacketsite.wordpress.com</a></li>
<li><a href="https://www.nwkings.com/what-is-fhrp-in-networking" target="_blank" rel="noopener noreferrer">https://www.nwkings.com/what-is-fhrp-in-networking</a></li>
<li><a href="https://peemangit.tistory.com/24" target="_blank" rel="noopener noreferrer">https://peemangit.tistory.com/24</a></li>
<li><a href="https://limvo.tistory.com/13" target="_blank" rel="noopener noreferrer">https://limvo.tistory.com/13</a></li>
</ul>]]></content:encoded>
            <category>FHRPs</category>
            <category>HSRP</category>
            <category>VRRP</category>
            <category>GLBP</category>
            <category>프로토콜</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[VTP]]></title>
            <link>https://dldkffh.github.io/2024/02/14/vtp</link>
            <guid>https://dldkffh.github.io/2024/02/14/vtp</guid>
            <pubDate>Wed, 14 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[VTP (VLAN Trunking Protocol)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp-vlan-trunking-protocol">VTP (VLAN Trunking Protocol)<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp-vlan-trunking-protocol" class="hash-link" aria-label="VTP (VLAN Trunking Protocol)에 대한 직접 링크" title="VTP (VLAN Trunking Protocol)에 대한 직접 링크">​</a></h3>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp-mode">VTP Mode<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp-mode" class="hash-link" aria-label="VTP Mode에 대한 직접 링크" title="VTP Mode에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="server-mode">Server mode<a href="https://dldkffh.github.io/2024/02/14/vtp#server-mode" class="hash-link" aria-label="Server mode에 대한 직접 링크" title="Server mode에 대한 직접 링크">​</a></h4>
<ul>
<li>VLAN을 생성, 수정 및 삭제</li>
<li>전체 VTP 도메인에 대해 VTP 버전 및 VTP 프루닝 같은 다른 컨피그레이션 매개변수를 지정</li>
<li>VLAN 컨피그레이션을 동일한 VTP 도메인의 다른 스위치에 광고</li>
<li>트렁크 링크를 통해 수신된 광고를 기반으로 다른 스위치와 동기화</li>
<li>VTP 서버가 기본 모드</li>
<li>스스로 VLAN 설정 가능, 설정 내용을 다른 스위치로 전송</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="client-mode">Client mode<a href="https://dldkffh.github.io/2024/02/14/vtp#client-mode" class="hash-link" aria-label="Client mode에 대한 직접 링크" title="Client mode에 대한 직접 링크">​</a></h4>
<ul>
<li>VTP 서버와 동일한 방식으로 작동</li>
<li>VLAN을 생성, 변경 또는 삭제할 수는 없음</li>
<li>스스로 VLAN 설정 불가능</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="transparent투명-mode">Transparent(투명) mode<a href="https://dldkffh.github.io/2024/02/14/vtp#transparent%ED%88%AC%EB%AA%85-mode" class="hash-link" aria-label="Transparent(투명) mode에 대한 직접 링크" title="Transparent(투명) mode에 대한 직접 링크">​</a></h4>
<ul>
<li>VTP에 참여하지 않음</li>
<li>VLAN 컨피그레이션을 광고하지 않음</li>
<li>수신된 광고를 기반으로 VLAN 컨피그레이션을 동기화하지 않음</li>
<li>VTP 버전 2에서 트렁크 포트를 수신하는 VTP 광고를 전달</li>
<li>스스로 VLAN&nbsp;설정 가능</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="off끄기">Off(끄기)<a href="https://dldkffh.github.io/2024/02/14/vtp#off%EB%81%84%EA%B8%B0" class="hash-link" aria-label="Off(끄기)에 대한 직접 링크" title="Off(끄기)에 대한 직접 링크">​</a></h4>
<ul>
<li>다른 세 가지 모드에서 스위치가 관리 도메인 상태로 들어가는 즉시 VTP 광고가 수신되고 전송</li>
<li>스위치가 VTP 투명 모드와 동일하게 작동</li>
<li>VTP 광고는 전달되지 않음</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp-message">VTP Message<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp-message" class="hash-link" aria-label="VTP Message에 대한 직접 링크" title="VTP Message에 대한 직접 링크">​</a></h3>
<ul>
<li>VTP 패킷은 ISL(Inter-Switch Link) 프레임 또는 IEEE 802.1Q(dot1q) 프레임으로 전송</li>
<li>패킷은 AAAA(Subnetwork Access Protocol)의 LLC(Logical Link Control) 코드 및 SNAP 헤더의 2003 유형과 함께 대상 MAC 주소 01-00-0C-CC-CC-CC로 전송</li>
<li>ISL 프레임으로 캡슐화되는 VTP 패킷의 형식</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="summary-advertisement">Summary Advertisement<a href="https://dldkffh.github.io/2024/02/14/vtp#summary-advertisement" class="hash-link" aria-label="Summary Advertisement에 대한 직접 링크" title="Summary Advertisement에 대한 직접 링크">​</a></h4>
<ul>
<li>VTP server가 자신과 연결된 스위치에게 5분 주기로 전달하는 메시지</li>
<li>자신의 관리하는 VTP domain에 대한 Revision number를 전송</li>
<li>각 스위치들은 이러한 Revision number를 보고 자신의 VLAN 정보가 최신인지 아닌지를 구분</li>
<li>VLAN 구성에 변화가 발생시에도 전송되는데 이 경우는 5분 주기가 아니라 변화 즉시 전송</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="subset-adverisement">Subset Adverisement<a href="https://dldkffh.github.io/2024/02/14/vtp#subset-adverisement" class="hash-link" aria-label="Subset Adverisement에 대한 직접 링크" title="Subset Adverisement에 대한 직접 링크">​</a></h4>
<ul>
<li>VLAN 구성이 변경 되었을 때나 VTP client로부터 Advertisement Request를 수신했을 때 전송</li>
<li>실제 VLAN 정보를 담고 있는 메시지</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="advertisement-request">Advertisement Request<a href="https://dldkffh.github.io/2024/02/14/vtp#advertisement-request" class="hash-link" aria-label="Advertisement Request에 대한 직접 링크" title="Advertisement Request에 대한 직접 링크">​</a></h4>
<ul>
<li>VTP client가 VTP server에게 Summary Advertisement 혹은 Subset Adverisement를 요청하는 경우 사용하는 메시지</li>
<li>client가 자신이 가지고 있는 Revision number보다 높은 Revision number를 가지고 있는 Summary Advertisement를 수신하거나 VTP domain 변경, 스위치 리셋 등 여러 변화가 생겼을 경우 이 메시지를 VTP server에 전송</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp조건">VTP&nbsp;조건<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp%EC%A1%B0%EA%B1%B4" class="hash-link" aria-label="VTP&nbsp;조건에 대한 직접 링크" title="VTP&nbsp;조건에 대한 직접 링크">​</a></h3>
<ul>
<li>VTP Domain Name&nbsp;설정<!-- -->
<ul>
<li>스위치에&nbsp;VTP는&nbsp;기본적으로&nbsp;동작이&nbsp;되고&nbsp;있는&nbsp;상태이며&nbsp;끌&nbsp;수가&nbsp;없는&nbsp;프로토콜</li>
<li>초기에&nbsp;아무&nbsp;설정도&nbsp;하지&nbsp;않으면&nbsp;VLAN정보를&nbsp;동기화&nbsp;하지&nbsp;않음<!-- -->
<ul>
<li>스위치간&nbsp;도메인&nbsp;이름이&nbsp;설정되어&nbsp;있지&nbsp;않기&nbsp;때문</li>
</ul>
</li>
<li>VTP를&nbsp;사용하여&nbsp;VLAN정보를&nbsp;동기화&nbsp;하기&nbsp;위해서는&nbsp;스위치들의&nbsp;VTP&nbsp;도메인&nbsp;이름을&nbsp;같도록&nbsp;설정해야&nbsp;함
&nbsp;</li>
</ul>
</li>
<li>스위치간&nbsp;Trunk Port&nbsp;설정<!-- -->
<ul>
<li>VTP&nbsp;메시지는&nbsp;Trunk에서만&nbsp;전달될&nbsp;수&nbsp;있음</li>
<li>스위치간&nbsp;링크가&nbsp;만약&nbsp;Access로&nbsp;설정이&nbsp;되어있거나 Trunk&nbsp;설정이&nbsp;아직&nbsp;되지&nbsp;않은&nbsp;경우,&nbsp;VTP&nbsp;메시지를&nbsp;주고&nbsp;받을&nbsp;수&nbsp;없음
&nbsp;</li>
</ul>
</li>
<li>VTP Password&nbsp;일치<!-- -->
<ul>
<li>안전장치인&nbsp;비밀번호를&nbsp;설정해놓는&nbsp;경우가&nbsp;있음<!-- -->
<ul>
<li>VTP&nbsp;프로토콜을&nbsp;이용하여&nbsp;무분별하게&nbsp;정보를&nbsp;받아올&nbsp;수&nbsp;있기&nbsp;때문에&nbsp;</li>
</ul>
</li>
<li>만약&nbsp;도메인&nbsp;이름은&nbsp;동일한데&nbsp;비밀번호가&nbsp;같지&nbsp;않다면&nbsp;VTP메시지를&nbsp;통한&nbsp;동기화를&nbsp;할&nbsp;수가&nbsp;없음&nbsp;<!-- -->
<ul>
<li>비밀번호를&nbsp;설정해놓은&nbsp;경우에는&nbsp;동기화를&nbsp;할&nbsp;모든&nbsp;스위치에&nbsp;비밀번호가&nbsp;같도록&nbsp;해야함</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp유의사항">VTP&nbsp;유의사항<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD" class="hash-link" aria-label="VTP&nbsp;유의사항에 대한 직접 링크" title="VTP&nbsp;유의사항에 대한 직접 링크">​</a></h3>
<ul>
<li>확장&nbsp;VLAN인&nbsp;1006~4094번은&nbsp;VTP&nbsp;버전&nbsp;1 , 2&nbsp;모두&nbsp;지원하지&nbsp;않기&nbsp;때문에&nbsp;Transparent&nbsp;모드에서만&nbsp;만들&nbsp;수&nbsp;있음</li>
<li>스위치의&nbsp;기본설정으로&nbsp;Server로&nbsp;되어&nbsp;있으며&nbsp;Domain은&nbsp;비어있음<!-- -->
<ul>
<li>공격자가&nbsp;하나의&nbsp;스위치에서&nbsp;Domain을&nbsp;설정하면&nbsp;모든&nbsp;스위치가&nbsp;하나의&nbsp;VTP로&nbsp;묶이게&nbsp;되어&nbsp;마음대로&nbsp;설정이&nbsp;가능해짐</li>
</ul>
</li>
<li>VTP&nbsp;를&nbsp;사용하고&nbsp;싶지&nbsp;않을&nbsp;때에는&nbsp;따로&nbsp;끄는&nbsp;기능이&nbsp;없어&nbsp;Transparent&nbsp;모드로&nbsp;변경해주어야&nbsp;함<!-- -->
<ul>
<li>시스코에서도&nbsp;VTP Transparent&nbsp;모드를&nbsp;권장함</li>
</ul>
</li>
<li>설정&nbsp;순서로&nbsp;인한&nbsp;문제가&nbsp;발생할&nbsp;수도&nbsp;있기&nbsp;때문에&nbsp;<strong>패스워드-&gt;도메인이름-&gt;모드변경</strong>&nbsp;순으로&nbsp;해줘야&nbsp;함<!-- -->
<ul>
<li>단, 12.2버전에서는&nbsp;도메인이름&nbsp;부터&nbsp;설정해야&nbsp;패스워드&nbsp;설정이&nbsp;되며, 12.3&nbsp;이상부터는&nbsp;패스워드설정부터&nbsp;가능</li>
</ul>
</li>
<li>새&nbsp;장비&nbsp;또는&nbsp;수리한&nbsp;사용하던&nbsp;장비를&nbsp;네트워크에&nbsp;추가&nbsp;시키려고&nbsp;할&nbsp;경우,&nbsp;리비전&nbsp;넘버를&nbsp;초기화&nbsp;시킨&nbsp;후&nbsp;추가&nbsp;해야&nbsp;다른&nbsp;장비의&nbsp;VLAN정보에&nbsp;영향을&nbsp;미치지&nbsp;않음</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vtp-pruning">VTP pruning<a href="https://dldkffh.github.io/2024/02/14/vtp#vtp-pruning" class="hash-link" aria-label="VTP pruning에 대한 직접 링크" title="VTP pruning에 대한 직접 링크">​</a></h3>
<ul>
<li>pruning의 뜻은 가지치기</li>
<li>VLAN을 좀더 효율적으로 사용하기 위해 만든 응용 기법</li>
<li>VLAN 트래픽이 이동할 때 갈 필요가 없는 trunk 방향으로 트래픽이 나갈 경우 그 부분을 가지치기처럼 잘라내는 기법</li>
<li>자신과 상관없는 VLAN 정보에 대한 트래픽을 trunk 포트라 하더라도 수신하지 않겠다는 의미</li>
<li>trunk 대역폭을 절약</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/14/vtp#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://light-touch-fish.tistory.com/m/19" target="_blank" rel="noopener noreferrer">https://light-touch-fish.tistory.com/m/19</a></li>
<li><a href="https://www.cisco.com/c/ko_kr/support/docs/lan-switching/vtp/10558-21.html" target="_blank" rel="noopener noreferrer">https://www.cisco.com/c/ko_kr/support/docs/lan-switching/vtp/10558-21.html</a></li>
<li><a href="https://bignet.tistory.com/m/23" target="_blank" rel="noopener noreferrer">https://bignet.tistory.com/m/23</a></li>
<li><a href="https://www.cisco.com/c/ko_kr/support/docs/lan-switching/vtp/98154-conf-vlan.html" target="_blank" rel="noopener noreferrer">https://www.cisco.com/c/ko_kr/support/docs/lan-switching/vtp/98154-conf-vlan.html</a></li>
</ul>]]></content:encoded>
            <category>VTP</category>
            <category>프로토콜</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[client, endpoint]]></title>
            <link>https://dldkffh.github.io/2024/02/13/client-endpoint</link>
            <guid>https://dldkffh.github.io/2024/02/13/client-endpoint</guid>
            <pubDate>Tue, 13 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[endpoint]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="endpoint">endpoint<a href="https://dldkffh.github.io/2024/02/13/client-endpoint#endpoint" class="hash-link" aria-label="endpoint에 대한 직접 링크" title="endpoint에 대한 직접 링크">​</a></h3>
<ul>
<li>네트워크와 통신하는 원격 컴퓨팅 장치</li>
<li>엔드포인트는 엑세스포인트가 아님<!-- -->
<ul>
<li>AP - 802.11 - CLIENT(endpoint)</li>
</ul>
</li>
<li>예시<!-- -->
<ul>
<li>Desktops</li>
<li>Laptops</li>
<li>Smartphones</li>
<li>Tablets</li>
<li>Servers</li>
<li>Workstations</li>
<li>Internet-of-things (IoT) devices</li>
</ul>
</li>
</ul>]]></content:encoded>
            <category>client</category>
            <category>endpoint</category>
            <category>네트워크</category>
            <category>인프라</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[AP 모드 종류 - autonomous, lightweight, cloudbased]]></title>
            <link>https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased</link>
            <guid>https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased</guid>
            <pubDate>Sat, 10 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[무선 네트워크에서 사용할 수 있는 무선 액세스 포인트의 두 가지 모드]]></description>
            <content:encoded><![CDATA[<blockquote>
<p><strong>무선 네트워크에서 사용할 수 있는 무선 액세스 포인트의 두 가지 모드</strong></p>
<ul>
<li>Autonomous(자율) AP</li>
<li>Lightweight(경량) AP</li>
</ul>
<p>Autonomous AP와 Lightweight AP는 일반적으로 동일한 네트워크에서 함께 작동할 수 없음</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="autonomous-ap-자율-엑세스-포인트">Autonomous AP (자율 엑세스 포인트)<a href="https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased#autonomous-ap-%EC%9E%90%EC%9C%A8-%EC%97%91%EC%84%B8%EC%8A%A4-%ED%8F%AC%EC%9D%B8%ED%8A%B8" class="hash-link" aria-label="Autonomous AP (자율 엑세스 포인트)에 대한 직접 링크" title="Autonomous AP (자율 엑세스 포인트)에 대한 직접 링크">​</a></h3>
<ul>
<li>자율 액세스 포인트는 경량 액세스 포인트보다 훨씬 더 흔함</li>
<li>최초의 자율 액세스 포인트는 가능한 한 무선 장치를 연결하기 위해 개발</li>
<li>현대적인 자율 액세스 포인트는 일반적으로 WLAN을 통해 작동</li>
</ul>
<ul>
<li>무선 트래픽을 위한 액세스 포인트와 스위치가 결합<!-- -->
<ul>
<li>컨트롤러는 단일 장치가 독립적으로 트래픽을 관리 가능</li>
</ul>
</li>
<li>작은 네트워크에 적합<!-- -->
<ul>
<li>모든 트래픽을 처리할 수 있는 장치가 하나만 필요하기 때문에 결정이 간단해짐</li>
</ul>
</li>
<li>규모가 커질때 최고의 옵션이 아님<!-- -->
<ul>
<li>수동으로 구성하면 엄청나게 복잡해짐</li>
<li>네트워크를 더 비싸고 덜 신뢰할 수 있게 함</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="lightweight-ap-경량-엑세스-포인트">Lightweight AP (경량 엑세스 포인트)<a href="https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased#lightweight-ap-%EA%B2%BD%EB%9F%89-%EC%97%91%EC%84%B8%EC%8A%A4-%ED%8F%AC%EC%9D%B8%ED%8A%B8" class="hash-link" aria-label="Lightweight AP (경량 엑세스 포인트)에 대한 직접 링크" title="Lightweight AP (경량 엑세스 포인트)에 대한 직접 링크">​</a></h3>
<ul>
<li>외부 무선랜 컨트롤러(WLC)에 의존<!-- -->
<ul>
<li>독립적인 컨트롤러를 통해, 많은 Lightweight AP들이 동일한 네트워크에서 동작하도록 구성</li>
<li>외부 WLC를 통해 원활하게 통신 가능</li>
</ul>
</li>
<li>무선 네트워크를 확장하기 쉽게 하기 위한 것<!-- -->
<ul>
<li>시스템의 플러그 및 재생 특성은 필요에 따라 액세스 포인트를 쉽게 이동하거나 추가할 수 있음</li>
<li>용량이나 커버리지를 빠르게 확장하거나 전환해야 할 때 유리</li>
<li>초기에 더 많은 하드웨어를 필요로 함</li>
<li>네트워크 내의 장치 수가 증가함에 따라 설계, 배치 및 유지 보수 비용이 감소</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cloudbased-ap-클라우드-기반-엑세스-포인트">Cloudbased AP (클라우드 기반 엑세스 포인트)<a href="https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased#cloudbased-ap-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EA%B8%B0%EB%B0%98-%EC%97%91%EC%84%B8%EC%8A%A4-%ED%8F%AC%EC%9D%B8%ED%8A%B8" class="hash-link" aria-label="Cloudbased AP (클라우드 기반 엑세스 포인트)에 대한 직접 링크" title="Cloudbased AP (클라우드 기반 엑세스 포인트)에 대한 직접 링크">​</a></h3>
<ul>
<li>클라우드를 통해 동작</li>
<li>클라우드에 데이터를 저장함</li>
<li>사용하는 데 있어 가장 큰 유연성 허용</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/10/ap-mode-autonomous-lightweight-cloudbased#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://www.cablesandkits.com/learning-center/autonomous-vs-lightweight-access-points" target="_blank" rel="noopener noreferrer">https://www.cablesandkits.com/learning-center/autonomous-vs-lightweight-access-points</a></li>
</ul>]]></content:encoded>
            <category>AP</category>
            <category>autonomous</category>
            <category>lightweight</category>
            <category>cloudbased</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[IEEE 802]]></title>
            <link>https://dldkffh.github.io/2024/02/10/ieee-802</link>
            <guid>https://dldkffh.github.io/2024/02/10/ieee-802</guid>
            <pubDate>Sat, 10 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[IEEE 802]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-802">IEEE 802<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-802" class="hash-link" aria-label="IEEE 802에 대한 직접 링크" title="IEEE 802에 대한 직접 링크">​</a></h3>
<ul>
<li>근거리 통신망과 도시권 통신망을 관할하는 전기 전자 기술자 협회(IEEE) 표준 규칙들의 계열</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-802-워킹-그룹">IEEE 802 워킹 그룹<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-802-%EC%9B%8C%ED%82%B9-%EA%B7%B8%EB%A3%B9" class="hash-link" aria-label="IEEE 802 워킹 그룹에 대한 직접 링크" title="IEEE 802 워킹 그룹에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-8021">IEEE 802.1<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-8021" class="hash-link" aria-label="IEEE 802.1에 대한 직접 링크" title="IEEE 802.1에 대한 직접 링크">​</a></h4>
<ul>
<li>802 LAN/MAN 아키텍처</li>
<li>802 LAN, MAN, WAN 사이의 네트워킹</li>
<li>802 연결 보안</li>
<li>802 전체 네트워크 관리</li>
<li>MAC &amp; LLC 계층 위의 프로토콜 계층</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="8021d">802.1D<a href="https://dldkffh.github.io/2024/02/10/ieee-802#8021d" class="hash-link" aria-label="802.1D에 대한 직접 링크" title="802.1D에 대한 직접 링크">​</a></h5>
<ul>
<li>브리징, 신장 트리 프로토콜 등을 포함하는 <strong>이더넷 MAC 브리지 표준</strong></li>
<li>802.3(이더넷), 802.11(무선 LAN) 및 802.16(WiMax) 표준을 포함</li>
<li>다른 많은 802 프로젝트를 연결하는 것과 관련된 세부 정보가 포함</li>
<li>802.1D는 2022년에 공식적으로 폐지될 것으로 예상</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="8021q">802.1Q<a href="https://dldkffh.github.io/2024/02/10/ieee-802#8021q" class="hash-link" aria-label="802.1Q에 대한 직접 링크" title="802.1Q에 대한 직접 링크">​</a></h5>
<ul>
<li>하나의 이더넷 네트워크에서 <strong>가상 랜(VLAN)을 지원하는 네트워크 표준</strong></li>
<li>이더넷 프레임을 위한 VLAN 태그 추가 시스템과 더불어, 이러한 프레임을 관리하는데 동반되는 브리지와 스위치에 쓰이는 절차들을 정의</li>
<li>IEEE 802.1p라는 QoS 우선 순위 스키마를 위한 예비를 포함하고 있으며 GARP를 정의</li>
<li>이후 개정판 : IEEE 802.1ak, IEEE 802.1Qat, IEEE 802.1Qay</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="8021aq">802.1aq<a href="https://dldkffh.github.io/2024/02/10/ieee-802#8021aq" class="hash-link" aria-label="802.1aq에 대한 직접 링크" title="802.1aq에 대한 직접 링크">​</a></h5>
<ul>
<li><strong>SPB(Shortest Path Bridging, 최단 경로 브리징)</strong></li>
<li>다중 경로 기술을 가능하게 하면서, 인간의 오류를 거의 제거해주는 캐리어, 기업, 클라우드 네트워크의 개발과 설정을 획기적으로 간편하게 만들어주는 기술</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-8023">IEEE 802.3<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-8023" class="hash-link" aria-label="IEEE 802.3에 대한 직접 링크" title="IEEE 802.3에 대한 직접 링크">​</a></h4>
<ul>
<li>연결된 이더넷에서 물리 계층, 데이터 링크 계층의 매체 접근 제어를 정의</li>
<li>광역 통신망 기술에도 활용되지만 일반적으로 근거리 통신망 기술</li>
<li>물리 연결은 <strong>동축케이블과 광케이블</strong> 등 다양한 형태의 케이블을 통해 노드와 인프라스트럭쳐 장치(허브, 스위치, 라우터) 사이에서 이루어짐</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80211-abgnacadax">IEEE 802.11 a/b/g/n/ac/ad/ax<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80211-abgnacadax" class="hash-link" aria-label="IEEE 802.11 a/b/g/n/ac/ad/ax에 대한 직접 링크" title="IEEE 802.11 a/b/g/n/ac/ad/ax에 대한 직접 링크">​</a></h4>
<ul>
<li><strong>무선랜, 와이파이(Wi-Fi)라고 부르는 무선 근거리 통신망(LAN) 또는 무선 네트워크</strong>에 사용되는 표준 규격</li>
<li>802.11과 와이파이라는 용어가 번갈아 사용되기도 하지만 802.11과 와이파이는 동의어가 아님</li>
<li>유선 LAN 형태인 이더넷의 단점을 보완하기 위해 고안된 기술<!-- -->
<ul>
<li>이더넷 네트워크의 말단에 위치해 필요 없는 배선 작업과 유지관리 비용을 최소화하기 위해 널리 쓰임</li>
<li>사무실의 컴퓨터는 무선으로 연결함으로써 사무실 내에 번거로이 케이블을 설치하고 유지보수를 하지 않아도 됨</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211-초기-버전">802.11 (초기 버전)<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211-%EC%B4%88%EA%B8%B0-%EB%B2%84%EC%A0%84" class="hash-link" aria-label="802.11 (초기 버전)에 대한 직접 링크" title="802.11 (초기 버전)에 대한 직접 링크">​</a></h5>
<ul>
<li>최고속도가 2Mbps</li>
<li>적외선 신호나 ISM 대역인 2.4GHz 대역 전파를 사용</li>
<li>CSMA/CA 기술을 사용</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211a">802.11a<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211a" class="hash-link" aria-label="802.11a에 대한 직접 링크" title="802.11a에 대한 직접 링크">​</a></h5>
<ul>
<li>최고 54Mbps까지의 전송 속도를 지원</li>
<li>5GHz 대역의 전파를 사용</li>
<li>OFDM 기술을 사용</li>
</ul>
<blockquote>
<p><strong>5GHz 대역이란?</strong></p>
<ul>
<li>2.4GHz 대역에 비해 다른 통신기기(무선 전화기, 블루투스 기기 등)와의 간섭이 적고, 더 넓은 전파 대역을 사용할 수 있음</li>
<li>신호의 특성상 장애물이나 도심 건물 등 주변 환경의 영향을 쉽게 받음</li>
<li>2.4GHz 대역에서 54Mbps 속도를 지원하는 802.11g 규격이 등장하면서 현재는 널리 쓰이지 않고 있음</li>
</ul>
</blockquote>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211b">802.11b<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211b" class="hash-link" aria-label="802.11b에 대한 직접 링크" title="802.11b에 대한 직접 링크">​</a></h5>
<ul>
<li>최고 전송속도는 11Mbps<!-- -->
<ul>
<li>6-7Mbps 정도의 효율</li>
</ul>
</li>
<li>CSMA/CA 기술</li>
<li>현실적인 속도를 지원</li>
<li>기업이나 가정 등에 유선 네트워크를 대체하기 위한 목적으로 폭넓게 보급</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211g">802.11g<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211g" class="hash-link" aria-label="802.11g에 대한 직접 링크" title="802.11g에 대한 직접 링크">​</a></h5>
<ul>
<li>최고 54Mbps까지의 전송 속도를 지원</li>
<li>2.4GHz 대역 전파를 사용</li>
<li>802.11b 규격과 쉽게 호환</li>
<li>CSMA/CA 기술을 사용</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211n">802.11n<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211n" class="hash-link" aria-label="802.11n에 대한 직��접 링크" title="802.11n에 대한 직접 링크">​</a></h5>
<ul>
<li>최고 600Mbps 까지의 속도를 지원</li>
<li>2.4GHz 대역과 5GHz 대역을 사용</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211ac">802.11ac<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211ac" class="hash-link" aria-label="802.11ac에 대한 직접 링크" title="802.11ac에 대한 직접 링크">​</a></h5>
<ul>
<li>최소 1 Gbit/s, 최대 단일 링크 속도는 최소 500 Mbit/s까지 가능</li>
<li>802.11n에서 받아들인 무선 인터페이스 개념을 확장<!-- -->
<ul>
<li>더 넓은 무선 주파수 대역폭(최대 160 MHz)</li>
<li>더 많은 MIMO 공간적 스트림(최대 8 개)</li>
<li>다중 사용자 MIMO</li>
<li>높은 밀도의 변조(최대 256 QAM)</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211ad">802.11ad<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211ad" class="hash-link" aria-label="802.11ad에 대한 직접 링크" title="802.11ad에 대한 직접 링크">​</a></h5>
<ul>
<li>최대 7Gb/s의 속도를 제공하는 전송규격</li>
<li>기존 2.4GHz/5GHz 대신 60GHz 대역을 사용</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="80211ax">802.11ax<a href="https://dldkffh.github.io/2024/02/10/ieee-802#80211ax" class="hash-link" aria-label="802.11ax에 대한 직접 링크" title="802.11ax에 대한 직접 링크">​</a></h5>
<ul>
<li>두 가지 새로운 Wi-Fi 사양 표준 중의 하나<!-- -->
<ul>
<li>다른 하나는 IEEE 802.11ay</li>
</ul>
</li>
<li>2.4GHz~5GHz 대역<!-- -->
<ul>
<li>1GHz ~ 6GHz 사이의 모든 ISM 대역과 함께 작동</li>
</ul>
</li>
<li>11Gbit/s의 이론적 데이터 속도를 주장</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="핫스팟">핫스팟<a href="https://dldkffh.github.io/2024/02/10/ieee-802#%ED%95%AB%EC%8A%A4%ED%8C%9F" class="hash-link" aria-label="핫스팟에 대한 직접 링크" title="핫스팟에 대한 직접 링크">​</a></h5>
<ul>
<li>다른말로 AP(Access Point)</li>
<li>이더넷 허브와 비슷한 역할을 하는 장비</li>
<li>하부구조(인프라스트럭처) 네트워크 모델에서 핫스팟 주변에 위치한 무선 클라이언트들을 하나의 네트워크로 묶어 서로 통신할 수 있게 함</li>
<li>핫스팟에 연결된 이더넷 회선을 통해 다른 핫스팟, 백본이나 WAN 망으로 연결할 수 있도록 해줌</li>
<li>핫스팟에는 고유의 SSID와 BSSID가 부여되어 있음<!-- -->
<ul>
<li>클라이언트가 특정한 핫스팟에 연결할 수 있게 도와줌</li>
</ul>
</li>
<li>하나의 핫스팟은 장애물이 없는 지역에서 최대 100미터, 최대 20여대까지 네트워크를 구성 가능</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80215">IEEE 802.15<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80215" class="hash-link" aria-label="IEEE 802.15에 대한 직접 링크" title="IEEE 802.15에 대한 직접 링크">​</a></h4>
<ul>
<li>일곱 가지 태스크 그룹<!-- -->
<ol>
<li><strong>WPAN/블루투스</strong></li>
<li>공존(Coexsistence)</li>
<li>고속 WPAN</li>
<li><strong>저속 WPAN</strong></li>
<li>메쉬 네트워킹</li>
<li>보디 에어리어 네트워크</li>
<li>가시광선 통신</li>
</ol>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-802151">IEEE 802.15.1<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-802151" class="hash-link" aria-label="IEEE 802.15.1에 대한 직접 링크" title="IEEE 802.15.1에 대한 직접 링크">​</a></h5>
<ul>
<li>블루투스</li>
<li>디지털 통신 기기를 위한 개인 근거리 무선 통신 산업 표준</li>
<li>수 미터에서 수십 미터 정도의 거리를 둔 정보기기 사이에, 전파를 이용해서 간단한 정보를 교환하는데 사용</li>
<li>개인용 컴퓨터에 이용되는 마우스, 키보드를 비롯해, 휴대전화 및 스마트폰, 태블릿, 스피커 등에서 문자 정보 및 음성 정보를 비교적 낮은 속도로 디지털 정보를 무선 통신을 통해 주고 받는 용도로 사용</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-802154">IEEE 802.15.4<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-802154" class="hash-link" aria-label="IEEE 802.15.4에 대한 직접 링크" title="IEEE 802.15.4에 대한 직접 링크">​</a></h5>
<ul>
<li>물리 계층(PHY)과 미디어 액세스 콘트롤 계층(MAC)을 정의하는 표준</li>
<li>저속도 무선 개인 통신망(Low Rate Wireless Personal Area Networks, LR-WPANs)를 위한 표준 가운데 하나</li>
<li>지그비 Zigbee</li>
<li>와이어리스하트(WirelessHART), 마이와이(MiWi) 표준의 기저 계층</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80216">IEEE 802.16<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80216" class="hash-link" aria-label="IEEE 802.16에 대한 직접 링크" title="IEEE 802.16에 대한 직접 링크">​</a></h4>
<ul>
<li>무선 브로드밴드 표준</li>
<li>광역 무선 도시권 통신망의 범용적인 이용을 위해 개발한 표준</li>
<li>WirelessMAN, 와이맥스</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80218">IEEE 802.18<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80218" class="hash-link" aria-label="IEEE 802.18에 대한 직접 링크" title="IEEE 802.18에 대한 직접 링크">​</a></h4>
<ul>
<li>전파 조정 기술 권고 그룹(Radio Regulatory Technical Advisory Group, RR-TAG)</li>
<li>6가지 전파 기반 시스템에 관한 프로젝트를 진행<!-- -->
<ul>
<li>IEEE 802.11: 무선 근거리 통신망(WLAN)</li>
<li>IEEE 802.15: 무선 개인 통신망(WPAN)</li>
<li>IEEE 802.16: 무선 도시권 통신망(WMAN)</li>
<li>IEEE 802.20: 무선 이동성</li>
<li>IEEE 802.21: 네트워크 간의 핸드오프/상호운용성</li>
<li>IEEE 802.22: 무선 국소 지역 네트워크(WRAN)</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80219">IEEE 802.19<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80219" class="hash-link" aria-label="IEEE 802.19에 대한 직접 링크" title="IEEE 802.19에 대한 직접 링크">​</a></h4>
<ul>
<li>IEEE 802 LAN/MAN 표준 위원회 소속인 무선 공존 기술 권고 그룹(WC-TAG)</li>
<li>라이선스 없는 무선 네트워크 간의 공존 기술을 담당</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80220">IEEE 802.20<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80220" class="hash-link" aria-label="IEEE 802.20에 대한 직접 링크" title="IEEE 802.20에 대한 직접 링크">​</a></h4>
<ul>
<li>모바일 광역 무선 액세스(Mobile Broadband Wireless Access, MBWA)</li>
<li>모바일 무선 인터넷 액세스 네트워크를 위한 표준</li>
<li>MBWA는 더 이상 개발되지 않고 있음</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80221">IEEE 802.21<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80221" class="hash-link" aria-label="IEEE 802.21에 대한 직접 링크" title="IEEE 802.21에 대한 직접 링크">​</a></h4>
<ul>
<li>다른 네트워크 간의 끊김 없는 핸드오버 기능을 가능하게 하는 알고리즘을 지원</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ieee-80222">IEEE 802.22<a href="https://dldkffh.github.io/2024/02/10/ieee-802#ieee-80222" class="hash-link" aria-label="IEEE 802.22에 대한 직접 링크" title="IEEE 802.22에 대한 직접 링크">​</a></h4>
<ul>
<li>텔레비전 주파수 대역의 화이트 스페이스 대역을 사용하는 무선 국소 지역 네트워크(WRAN)를 위한 표준</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/10/ieee-802#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.1" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.1</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.1D" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.1D</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.1Q" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.1Q</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.1aq" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.1aq</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.3" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.3</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.15" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.15</a></li>
<li><a href="https://ko.wikipedia.org/wiki/%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.15.4" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.15.4</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.16" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.16</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.18" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.18</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.19" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.19</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.20" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.20</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.21" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.21</a></li>
<li><a href="https://ko.wikipedia.org/wiki/IEEE_802.22" target="_blank" rel="noopener noreferrer">https://ko.wikipedia.org/wiki/IEEE_802.22</a></li>
</ul>]]></content:encoded>
            <category>IEEE</category>
            <category>802</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[LWAPP, CAPWAP]]></title>
            <link>https://dldkffh.github.io/2024/02/10/lwapp-capwap</link>
            <guid>https://dldkffh.github.io/2024/02/10/lwapp-capwap</guid>
            <pubDate>Sat, 10 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[CAPWAP(Control And Provisioning of Wireless Access Points, 무선 액세스 포인트 제어 및 프로비저닝)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="capwapcontrol-and-provisioning-of-wireless-access-points-무선-액세스-포인트-제어-및-프로비저닝">CAPWAP(Control And Provisioning of Wireless Access Points, 무선 액세스 포인트 제어 및 프로비저닝)<a href="https://dldkffh.github.io/2024/02/10/lwapp-capwap#capwapcontrol-and-provisioning-of-wireless-access-points-%EB%AC%B4%EC%84%A0-%EC%95%A1%EC%84%B8%EC%8A%A4-%ED%8F%AC%EC%9D%B8%ED%8A%B8-%EC%A0%9C%EC%96%B4-%EB%B0%8F-%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%8B%9D" class="hash-link" aria-label="CAPWAP(Control And Provisioning of Wireless Access Points, 무선 액세스 포인트 제어 및 프로비저닝)에 대한 직접 링크" title="CAPWAP(Control And Provisioning of Wireless Access Points, 무선 액세스 포인트 제어 및 프로비저닝)에 대한 직접 링크">​</a></h3>
<ul>
<li>AP와 WLC간의 통신 프로토콜<!-- -->
<ul>
<li>WLC - CAPWAP - AP - 802.11 - CLIENT</li>
<li>WLC - LWAPP - AP - 802.11 - CLIENT</li>
</ul>
</li>
<li>AP와 네트워크 인프라간의 상호작동을 표준화하는데 목표를 둔 IETF 이니셔티<!-- -->
<ul>
<li>AP와 무선 스위치간의 상호운용성을 향상</li>
</ul>
</li>
<li>중앙 무선 LAN 액세스 컨트롤러(AC)가 일반적으로 무선 액세스 포인트로 알려진 WTP(Wireless Termination Points, 무선 종료 포인트) 모음을 관리할 수 있도록 하는 상호 운용 가능한 표준 네트워킹 프로토콜</li>
</ul>
<ul>
<li>LWAPP(Lightweight Access Point Protocol)을 기반<!-- -->
<ul>
<li>LWAPP와 유사</li>
<li>LWAPP는 CISCO 전용 프로토콜</li>
<li>CAPWAP은 표준 기술로 IETF standard로 지정됨</li>
</ul>
</li>
<li>LWAPP과 다르게 DTLS(Datagram Transport Layer Security, 데이터그램 전송 계층 보안) 터널 설정이 추가되어 있음</li>
<li>UDP 포트 5246(제어 채널) 및 5247(데이터 채널)을 사용</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="capwap-검색의-작동-방식">CAPWAP 검색의 작동 방식<a href="https://dldkffh.github.io/2024/02/10/lwapp-capwap#capwap-%EA%B2%80%EC%83%89%EC%9D%98-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D" class="hash-link" aria-label="CAPWAP 검색의 작동 방식에 대한 직접 링크" title="CAPWAP 검색의 작동 방식에 대한 직접 링크">​</a></h4>
<ol>
<li>무선 액세스 포인트의 전원이 켜지면 연결할 CAPWAP 컨트롤러를 찾는다.</li>
<li>액세스 포인트는 로컬 네트워크에서 CAPWAP 검색 메시지를 브로드캐스트한다.</li>
<li>APWAP 컨트롤러는 검색 메시지를 수신하면 구성 정보로 응답한다.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/10/lwapp-capwap#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/CAPWAP" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/CAPWAP</a></li>
<li>데이터넷(<a href="https://www.datanet.co.kr/" target="_blank" rel="noopener noreferrer">https://www.datanet.co.kr</a>)</li>
<li><a href="https://www.linkedin.com/pulse/capwap-explained-briefly-mark-pinchen" target="_blank" rel="noopener noreferrer">https://www.linkedin.com/pulse/capwap-explained-briefly-mark-pinchen</a></li>
</ul>]]></content:encoded>
            <category>LWAPP</category>
            <category>CAPWAP</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[forwarding, routing]]></title>
            <link>https://dldkffh.github.io/2024/02/07/forwarding-routing</link>
            <guid>https://dldkffh.github.io/2024/02/07/forwarding-routing</guid>
            <pubDate>Wed, 07 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[네트워크 계층 역할]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="네트워크-계층-역할">네트워크 계층 역할<a href="https://dldkffh.github.io/2024/02/07/forwarding-routing#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%84%EC%B8%B5-%EC%97%AD%ED%95%A0" class="hash-link" aria-label="네트워크 계층 역할에 대한 직접 링크" title="네트워크 계층 역할에 대한 직접 링크">​</a></h3>
<ul>
<li>송신 호스트에서 수신 호스트로 패킷을 전달하는 것</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="forwarding포워딩-전송-전달">forwarding(포워딩, 전송, 전달)<a href="https://dldkffh.github.io/2024/02/07/forwarding-routing#forwarding%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%A0%84%EC%86%A1-%EC%A0%84%EB%8B%AC" class="hash-link" aria-label="forwarding(포워딩, 전송, 전�달)에 대한 직접 링크" title="forwarding(포워딩, 전송, 전달)에 대한 직접 링크">​</a></h3>
<ul>
<li>패킷이 라우터의 입력 링크에 도달했을 때 라우터는 그 패킷을 적절한 출력 링크로 이동시켜야 함</li>
<li>포워딩은 데이터 평면에 구현된 하나의 기능</li>
<li>매우 짧은 시간(보통 몇 나노초) 단위를 갖기에 대표적으로 하드웨어에서 실행</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="forwarding-table포워딩-테이블">forwarding table(포워딩 테이블)<a href="https://dldkffh.github.io/2024/02/07/forwarding-routing#forwarding-table%ED%8F%AC%EC%9B%8C%EB%94%A9-%ED%85%8C%EC%9D%B4%EB%B8%94" class="hash-link" aria-label="forwarding table(포워딩 테이블)에 대한 직접 링크" title="forwarding table(포워딩 테이블)에 대한 직접 링크">​</a></h4>
<ul>
<li>라우터는 도착하는 패킷 헤더의 필드 값을 조사하여 패킷을 포워딩<!-- -->
<ul>
<li>필드 값을 라우터의 포워딩 테이블의 내부 색인으로 사용</li>
</ul>
</li>
<li>포워딩 테이블 엔트리에 저장되어있는 헤더의 값은 해당 패킷이 전달되어야 할 라우터의 외부 링크 인터페이스를 나타냄</li>
<li>라우터는 자신의 포워딩 테이블을 보고 이 패킷에 대한 출력 링크 인터페이스를 결정</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="routing라우팅">routing(라우팅)<a href="https://dldkffh.github.io/2024/02/07/forwarding-routing#routing%EB%9D%BC%EC%9A%B0%ED%8C%85" class="hash-link" aria-label="routing(라우팅)에 대한 직접 링크" title="routing(라우팅)에 대한 직접 링크">​</a></h3>
<ul>
<li>송신자가 수신자에게 패킷을 전송할 때 네트워크 계층은 패킷 경로를 결정해야 함<!-- -->
<ul>
<li>이러한 경로 알고리즘은 routing algorithm(라우팅 알고리즘)이라 함</li>
</ul>
</li>
<li>네트워크 전반에 걸처 출발지에서 목적지까지 데이터그램의 종단간 경로를 결정하는 것</li>
<li>보통 초 단위를 갖기에 소프트웨어에서 보통 실행</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/07/forwarding-routing#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://lib.seoul.go.kr/search/detail/CATTOT000001130839" target="_blank" rel="noopener noreferrer">컴퓨터 네트워킹 : 하양식 접근 7판</a></li>
</ul>]]></content:encoded>
            <category>forwarding</category>
            <category>routing</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[DHCP VS. DNS]]></title>
            <link>https://dldkffh.github.io/2024/02/06/dhcp-vs-dns</link>
            <guid>https://dldkffh.github.io/2024/02/06/dhcp-vs-dns</guid>
            <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[DHCP(Dynamic Host Configuration Protocol, 동적 호스트 구성 프로토콜)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dhcpdynamic-host-configuration-protocol-동적-호스트-구성-프로토콜">DHCP(Dynamic Host Configuration Protocol, 동적 호스트 구성 프로토콜)<a href="https://dldkffh.github.io/2024/02/06/dhcp-vs-dns#dhcpdynamic-host-configuration-protocol-%EB%8F%99%EC%A0%81-%ED%98%B8%EC%8A%A4%ED%8A%B8-%EA%B5%AC%EC%84%B1-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" class="hash-link" aria-label="DHCP(Dynamic Host Configuration Protocol, 동적 호스트 구성 프로토콜)에 대한 직접 링크" title="DHCP(Dynamic Host Configuration Protocol, 동적 호스트 구성 프로토콜)에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.m.wikipedia.org/wiki/%ED%98%B8%EC%8A%A4%ED%8A%B8" target="_blank" rel="noopener noreferrer">호스트</a>&nbsp;<a href="https://ko.m.wikipedia.org/wiki/IP" target="_blank" rel="noopener noreferrer">IP</a>&nbsp;구성 관리를 단순화하는 IP 표준</li>
<li>IP 주소의 일률적 관리 서비스를 제공<!-- -->
<ul>
<li>네트워크 관리자들이 조직 내의 네트워크 상에서 IP 주소를 중앙에서 관리하고 할당해줄 수 있도록 해주는 프로토콜</li>
</ul>
</li>
<li><a href="https://ko.m.wikipedia.org/wiki/%EC%A0%84%EC%86%A1_%EC%A0%9C%EC%96%B4_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" target="_blank" rel="noopener noreferrer">TCP</a>/IP 통신을 실행하기 위해 필요한 설정 정보를 자동적으로 할당, 관리하기 위한 통신 규약<!-- -->
<ul>
<li>RFC 1541에 규정됨</li>
</ul>
</li>
<li>UDP상의 프로토콜</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dnsdomain-name-system도메인-네임-시스템">DNS(Domain Name System,&nbsp;도메인 네임 시스템)<a href="https://dldkffh.github.io/2024/02/06/dhcp-vs-dns#dnsdomain-name-system%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C" class="hash-link" aria-label="DNS(Domain Name System,&nbsp;도메인 네임 시스템)에 대한 직접 링크" title="DNS(Domain Name System,&nbsp;도메인 네임 시스템)에 대한 직접 링크">​</a></h3>
<ul>
<li>인터넷 도메인 주소 체계</li>
<li>호스트의 도메인 이름을 호스트의 네트워크 주소로 바꾸거나 그 반대의 변환을 수행할 수 있도록 하기 위해 개발</li>
<li>특정 컴퓨터(또는 네트워크로 연결된 임의의 장치)의 주소를 찾기 위해, 사람이 이해하기 쉬운 도메인 이름을 숫자로 된 식별 번호(IP 주소)로 변환</li>
<li>분산형&nbsp;<a href="https://ko.m.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4" target="_blank" rel="noopener noreferrer">데이터베이스</a>&nbsp;시스템</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/06/dhcp-vs-dns#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 ��직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.m.wikipedia.org/wiki/%EB%8F%99%EC%A0%81_%ED%98%B8%EC%8A%A4%ED%8A%B8_%EA%B5%AC%EC%84%B1_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" target="_blank" rel="noopener noreferrer">https://ko.m.wikipedia.org/wiki/동적_호스트_구성_프로토콜</a></li>
<li><a href="https://ko.m.wikipedia.org/wiki/%EB%8F%84%EB%A9%94%EC%9D%B8_%EB%84%A4%EC%9E%84_%EC%8B%9C%EC%8A%A4%ED%85%9C" target="_blank" rel="noopener noreferrer">https://ko.m.wikipedia.org/wiki/도메인_네임_시스템</a></li>
</ul>]]></content:encoded>
            <category>DHCP</category>
            <category>DNS</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[LAG, LACP]]></title>
            <link>https://dldkffh.github.io/2024/02/06/lag-lacp</link>
            <guid>https://dldkffh.github.io/2024/02/06/lag-lacp</guid>
            <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[LAG(Link Aggregation Group, 링크 애그리게이션 그룹)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="laglink-aggregation-group-링크-애그리게이션-그룹">LAG(Link Aggregation Group, 링크 애그리게이션 그룹)<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#laglink-aggregation-group-%EB%A7%81%ED%81%AC-%EC%95%A0%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%EC%85%98-%EA%B7%B8%EB%A3%B9" class="hash-link" aria-label="LAG(Link Aggregation Group, 링크 애그리게이션 그룹)에 대한 직접 링크" title="LAG(Link Aggregation Group, 링크 애그리게이션 그룹)에 대한 직접 링크">​</a></h3>
<ul>
<li>컴퓨터 네트워크에서 하나의 연결이 지탱할 수 있는 것 이상으로 <a href="https://ko.wikipedia.org/wiki/%EC%8A%A4%EB%A3%A8%ED%92%8B" target="_blank" rel="noopener noreferrer">스루풋</a>을 증가시키기 위해, 또는 링크 중 하나가 실패할 것을 대비하여 다중화(redundancy)를 제공하기 위해, 여러 네트워크 연결을 병렬로 연결하는 여러 가지 방식</li>
<li>링크 애그리게이션 그룹(LAG)은 수많은 물리적 포트를 하나로 병합하여 하나의 고대역 데이터 경로를 만들어주며 그룹 내 멤버 포트들 간에 트래픽 부하 분산을 구현하고 연결의 신뢰성을 강화</li>
</ul>
<ul>
<li>이더넷 연결에서 두 가지 문제를 해결<!-- -->
<ul>
<li>대역폭 제한<!-- -->
<ul>
<li>대역폭의 요구는 선형적으로 늘어나지 않음</li>
<li>이더넷의 대역폭은 역사적으로 여러 세대에 걸쳐 10씩 증가해음<!-- -->
<ul>
<li>10 Mbit/초</li>
<li>100 Mbit/초</li>
<li>1000 Mbit/초</li>
<li>10,000 Mbit/초</li>
</ul>
</li>
<li>대역폭 한계에 마주치기 시작하면 유일한 옵션은 비용이 엄청날 수 있는 다음 세대로 이동하는 것 뿐</li>
<li>다른 솔루션 : 채널 본딩<!-- -->
<ul>
<li>1990년대 초에 네트워크 제조업체들 중 다수가 도입한 것</li>
<li>2개의 물리 이더넷 링크를 하나의 논리 링크로 병합하는 것</li>
<li>대부분은 수동 구성 및 유사 장비가 애그리게이션의 양측에 필요</li>
</ul>
</li>
</ul>
</li>
<li>회복성 결여<!-- -->
<ul>
<li>일반적인 포트-케이블-포트 연결에서 3개의 단일 장애점을 동반</li>
</ul>
</li>
</ul>
</li>
<li>대역폭 증가</li>
<li>회선 이중화</li>
<li>로드밸런싱</li>
<li>박스 구성에서 STP의 영향을 최소화</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="lacp-link-aggregation-control-protocol-링크-애그리게이션-컨트롤-프로토콜">LACP (Link Aggregation Control Protocol, 링크 애그리게이션 컨트롤 프로토콜)<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#lacp-link-aggregation-control-protocol-%EB%A7%81%ED%81%AC-%EC%95%A0%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%94%84%EF%BF%BD%EB%A1%9C%ED%86%A0%EC%BD%9C" class="hash-link" aria-label="LACP (Link Aggregation Control Protocol, 링크 애그리게이션 컨트롤 프로토콜)에 대한 직접 링크" title="LACP (Link Aggregation Control Protocol, 링크 애그리게이션 컨트롤 프로토콜)에 대한 직접 링크">​</a></h4>
<ul>
<li>IEEE 링크 애그리게이션 표준화 작업</li>
<li>IEEE 802.3 그룹은 스터디 그룹을 구성하여 1997년 11월 미팅에서 상호 운용 가능한 링크 계층 표준을 만듦<!-- -->
<ul>
<li>2000년: 802.3ad 최초판</li>
<li>2008년: 802.1 레이어로 이동</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="다른-우산-용어들">다른 우산 용어들<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#%EB%8B%A4%EB%A5%B8-%EC%9A%B0%EC%82%B0-%EC%9A%A9%EC%96%B4%EB%93%A4" class="hash-link" aria-label="다른 우산 용어들에 대한 직접 링크" title="다른 우산 용어들에 대한 직접 링크">​</a></h4>
<ul>
<li>포트 트렁킹(port trunking)</li>
<li>링크 번들링(link bundling)</li>
<li>이더넷/네트워크/NIC 본딩</li>
<li>NIC 티밍(NIC teaming)</li>
<li>네트워크 이중화</li>
<li>네트워크 다중화</li>
<li>이더채널 (EtherChannel)</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="모드">모드<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#%EB%AA%A8%EB%93%9C" class="hash-link" aria-label="모드에 대한 직접 링크" title="모드에 대한 직접 링크">​</a></h4>
<ul>
<li>active<!-- -->
<ul>
<li>상대방 인터페이스로 LACP 패킷을 정기적으로 전송하며 협상을 시작</li>
</ul>
</li>
<li>passive<!-- -->
<ul>
<li>상대방이 전송하는 LACP 패킷을 수신할때까지 대기하며, 협상이 성공하면 채널링</li>
</ul>
</li>
<li>on<!-- -->
<ul>
<li>협상 기능을 사용하지 않고 이더채널 포트를 활성화</li>
<li>협상과정이 없기 때문에 패킷 손실과 프레임 루프가 발생할 가능성이 존재</li>
</ul>
</li>
<li>passive - passive 의 경우 연결 불가</li>
</ul>
<table><thead><tr><th></th><th>Active</th><th>Pssive</th><th>On</th></tr></thead><tbody><tr><td>Active</td><td>YES</td><td>YES</td><td>NO</td></tr><tr><td>Pssive</td><td>YES</td><td>NO</td><td>NO</td></tr><tr><td>On</td><td>NO</td><td>NO</td><td>YES</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pagp-port-aggregation-protocol-팩피">PAgP (Port Aggregation Protocol, 팩피)<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#pagp-port-aggregation-protocol-%ED%8C%A9%ED%94%BC" class="hash-link" aria-label="PAgP (Port Aggregation Protocol, 팩피)에 대한 직접 링크" title="PAgP (Port Aggregation Protocol, 팩피)에 대한 직접 링크">​</a></h3>
<ul>
<li>Cisco 독점 이더채널 모드</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="모드-1">모드<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#%EB%AA%A8%EB%93%9C-1" class="hash-link" aria-label="모드에 대한 직접 링크" title="모드에 대한 직접 링크">​</a></h4>
<ul>
<li>desirable<!-- -->
<ul>
<li>상대방 인터페이스로 PAGP 패킷을 정기적으로 전송하며 협상을 시작</li>
</ul>
</li>
<li>auto<!-- -->
<ul>
<li>상대방이 전송하는 PAGP 패킷을 수신할때까지 대기하며, 협상이 성공하면 채널링</li>
</ul>
</li>
<li>on<!-- -->
<ul>
<li>협상 기능을 사용하지 않고 이더채널 포트를 활성화</li>
<li>협상과정이 없기 때문에 패킷 손실과 프레임 루프가 발생할 가능성이 존재</li>
</ul>
</li>
<li>auto - auto 의 경우 연결 불가</li>
</ul>
<table><thead><tr><th></th><th>Desirable</th><th>Auto</th><th>On</th></tr></thead><tbody><tr><td>Desirable</td><td>YES</td><td>YES</td><td>NO</td></tr><tr><td>Auto</td><td>YES</td><td>NO</td><td>NO</td></tr><tr><td>On</td><td>NO</td><td>NO</td><td>YES</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="사용조건-및-주의사항">사용조건 및 주의사항<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#%EC%82%AC%EC%9A%A9%EC%A1%B0%EA%B1%B4-%EB%B0%8F-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD" class="hash-link" aria-label="사용조건 및 주의사항에 대한 직접 링크" title="사용조건 및 주의사항에 대한 직접 링크">​</a></h3>
<ul>
<li>Vlan, Speed, Duplex, STP 설정값이 모두 동일해야 설정가능하다.</li>
<li>Trunk port를 이더채널로 구성하려면 모든 Port가 같은 Trunk mode로 구성되어야 한다.</li>
<li>Switched port analyzer(SPAN, 포트 미러링) 에서는 사용할 수 없다.</li>
<li>Port-security 설정시 구성 불가능하다.</li>
<li>Fast, Gigabit Ethernet 에서는 구성 가능하지만 Ethernet(10Mbps)은 지원하지 않는다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cisco-장비-lag-사용시-가이드라인">Cisco 장비 LAG 사용시 가이드라인<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#cisco-%EC%9E%A5%EB%B9%84-lag-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EA%B0%80%EC%9D%B4%EB%93%9C%EB%9D%BC%EC%9D%B8" class="hash-link" aria-label="Cisco 장비 LAG 사용시 가이드라인에 대한 직접 링크" title="Cisco 장비 LAG 사용시 가이드라인에 대한 직접 링크">​</a></h3>
<ul>
<li>컨트롤러의 포트를 별도의 LAG 그룹으로 구성할 수 없습니다. 컨트롤러당 하나의 LAG 그룹만 지원됩니다. 따라서 LAG 모드에서 컨트롤러를 하나의 이웃 장치에만 연결할 수 있습니다.</li>
<li>LAG가 활성화되면 LAG 구성에 대한 변경은 컨트롤러 재부팅이 필요합니다.</li>
<li>LAG를 활성화할 때 하나의 논리 포트만 필요하기 때문에 하나의 AP-관리자 인터페이스만을 구성할 수 있습니다.</li>
<li>LAG를 활성화하면 모든 동적 AP-관리자 인터페이스와 미지정 인터페이스가 삭제되고 모든 WLAN이 관리 인터페이스에 매핑됩니다.</li>
<li>LAG를 활성화하면 29개 이외의 1차 포트와 인터페이스를 만들 수 없습니다.</li>
<li>LAG를 활성화하면 모든 포트가 기본적으로 LAG에 참여합니다. 따라서, 당신은 이웃 스위치에 있는 모든 연결된 포트에 대해 LAG를 구성해야 합니다.</li>
<li>LAG를 활성화하면 포트 미러링이 지원되지 않습니다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/06/lag-lacp#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.m.wikipedia.org/wiki/%EB%A7%81%ED%81%AC_%EC%95%A0%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%EC%85%98" target="_blank" rel="noopener noreferrer">위키백과 - 링크 애그리게이션</a></li>
<li><a href="https://community.cisco.com/t5/wireless-mobility-knowledge-base/lag-link-aggregation/ta-p/3128669" target="_blank" rel="noopener noreferrer">CISCO community - LAG - Link Aggregation</a></li>
<li><a href="https://daengsik.tistory.com/41" target="_blank" rel="noopener noreferrer">IT Net Tech - 네트워크 - 이더채널 (EtherChannel)</a></li>
</ul>]]></content:encoded>
            <category>LAG</category>
            <category>LACP</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[LLDP, CDP]]></title>
            <link>https://dldkffh.github.io/2024/02/06/lldp-cdp</link>
            <guid>https://dldkffh.github.io/2024/02/06/lldp-cdp</guid>
            <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Cisco Discovery Protocol(CDP, 시스코 디스커버리 프로토콜)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cisco-discovery-protocolcdp-시스코-디스커버리-프로토콜">Cisco Discovery Protocol(CDP, 시스코 디스커버리 프로토콜)<a href="https://dldkffh.github.io/2024/02/06/lldp-cdp#cisco-discovery-protocolcdp-%EC%8B%9C%EC%8A%A4%EC%BD%94-%EB%94%94%EC%8A%A4%EC%BB%A4%EB%B2%84%EB%A6%AC-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" class="hash-link" aria-label="Cisco Discovery Protocol(CDP, 시스코 디스커버리 프로토콜)에 대한 직접 링크" title="Cisco Discovery Protocol(CDP, 시스코 디스커버리 프로토콜)에 대한 직접 링크">​</a></h3>
<ul>
<li>2계층&nbsp;<a href="https://ko.m.wikipedia.org/wiki/%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" target="_blank" rel="noopener noreferrer">프로토콜</a></li>
<li>멀티캐스트 주소로 사용해 이웃 시스코 장비에 정보를 파악 - 시스코&nbsp;<a href="https://ko.m.wikipedia.org/wiki/%EB%9D%BC%EC%9A%B0%ED%84%B0" target="_blank" rel="noopener noreferrer">라우터</a>와 스위치에 직접 연결된 장비를 찾아냄 - 인접 장비에게 자신의 정보를 알려줄 때 사용</li>
</ul>
<ul>
<li>Hold Time<!-- -->
<ul>
<li>호스트명 변경 &amp; 구성 정보 업데이트 시 180초 까지만 저장</li>
</ul>
</li>
<li>Update Time<!-- -->
<ul>
<li>60초 마다 자신의 정보를 다른 장비에게 알림</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="lldplink-layer-discovery-protocol-commands">LLDP(Link Layer Discovery Protocol) commands<a href="https://dldkffh.github.io/2024/02/06/lldp-cdp#lldplink-layer-discovery-protocol-commands" class="hash-link" aria-label="LLDP(Link Layer Discovery Protocol) commands에 대한 직접 링크" title="LLDP(Link Layer Discovery Protocol) commands에 대한 직접 링크">​</a></h3>
<ul>
<li><code>lldp run</code> : 스위치에서 전역적으로 LLDP를 활성화</li>
<li><code>no lldp run</code> : 위치에서 전역적으로 LLDP를 비활성화</li>
<li><code>lldp timer</code> : 소프트웨어가 LLDP 업데이트를 보내는 빈도를 지정</li>
<li><code>no lldp receive</code> : 특정 인터페이스에서 LLDP 수신을 비활성화</li>
<li><code>no lldp transmit</code> : 특정 인터페이스에서 LLDP 전송을 비활성화</li>
<li><strong><code>lldp holdtime</code></strong> : 수신 장치가 장치의 정보를 삭제하기 전에 해당 장치의 정보를 보관해야 하는 시간을 지정</li>
<li><strong><code>lldp reinit</code></strong> : 재초기화를 수행하기 전에 지연할 시간을 설정</li>
<li><strong><code>lldp reinit delay</code></strong> : LLDP가 인터페이스에서 초기화하는 지연 시간을 초 단위로 지정</li>
<li><strong><code>lldp timer rate</code></strong> : LLDP 업데이트 전송 빈도를 초 단위로 설정</li>
<li><code>clear lldp</code> : LLDP 통계를 지우기</li>
<li><code>show lldp</code> : 기본 LLDP 정보를 표시</li>
<li><code>show lldp local-information</code> : LLDP 로컬 정보를 표시</li>
<li><code>show lldp neighbors</code> : LLDP 네이버 정보를 표시</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cdpcisco-discovery-protocol-commands">CDP(Cisco Discovery Protocol) commands<a href="https://dldkffh.github.io/2024/02/06/lldp-cdp#cdpcisco-discovery-protocol-commands" class="hash-link" aria-label="CDP(Cisco Discovery Protocol) commands에 대한 직접 링크" title="CDP(Cisco Discovery Protocol) commands에 대한 직접 링크">​</a></h3>
<ul>
<li><code>no cdp run</code> : CDP를 전역적으로 비활성화</li>
<li><code>cdp run global</code> : CDP를 전역적으로 다시 활성화</li>
<li><code>cdp enable</code> : 인터페이스에서 CDP를 활성화</li>
<li><code>no cdp</code> : 인터페이스에서 CDP를 비활성화</li>
<li><code>cdp holdtime x</code> : CDP 업데이트가 전송되는 빈도를 변경</li>
<li><code>cdp timer x</code> : CDP의 유지 시간을 변경</li>
<li><code>cdp enable</code> : 특정 인터페이스에서 CDP를 활성화</li>
<li><code>export</code> : 현재 사용자 정의 정의를 지정된 파일 이름을 가진 CDD로 내보냄</li>
<li><code>explain</code> : 지정된 메시지 ID를 가진 CDP 메시지에 대한 설명을 표시</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/06/lldp-cdp#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.m.wikipedia.org/wiki/%EC%8B%9C%EC%8A%A4%EC%BD%94_%EB%94%94%EC%8A%A4%EC%BB%A4%EB%B2%84%EB%A6%AC_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C" target="_blank" rel="noopener noreferrer">https://ko.m.wikipedia.org/wiki/시스코<em>디스커버리</em>프로토콜</a></li>
<li><a href="https://www.juniper.net/documentation/us/en/software/junos/multicast-l2/topics/concept/lldp-op-md-cmd-table.html#:~:text=Task%2C%20Clear%20LLDP%20statistics.%2C%20Display%20basic%20LLDP,lldp%2C%20show%20lldp%20local%2Dinformation%2C%20show%20lldp%20neighbors%2C" target="_blank" rel="noopener noreferrer">https://www.juniper.net/documentation/us/en/software/junos/multicast-l2/topics/concept/lldp-op-md-cmd-table.html#:~:text=Task%2C%20Clear%20LLDP%20statistics.%2C%20Display%20basic%20LLDP,lldp%2C%20show%20lldp%20local%2Dinformation%2C%20show%20lldp%20neighbors%2C</a></li>
<li><a href="https://www.cisco.com/c/en/us/td/docs/routers/nfvis/switch_command/b-nfvis-switch-command-reference/b-nfvis-switch-command-reference_chapter_010000.pdf" target="_blank" rel="noopener noreferrer">https://www.cisco.com/c/en/us/td/docs/routers/nfvis/switch_command/b-nfvis-switch-command-reference/b-nfvis-switch-command-reference_chapter_010000.pdf</a></li>
<li><a href="https://arista.my.site.com/" target="_blank" rel="noopener noreferrer">https://arista.my.site.com/</a></li>
<li><a href="https://www.computernetworkingnotes.com/ccna-study-guide/cdp-cisco-discovery-protocol-guide-with-examples.html" target="_blank" rel="noopener noreferrer">https://www.computernetworkingnotes.com/ccna-study-guide/cdp-cisco-discovery-protocol-guide-with-examples.html</a></li>
<li><a href="https://www.ibm.com/docs/en/ftmswsfm324?topic=reference-cdp-commands" target="_blank" rel="noopener noreferrer">https://www.ibm.com/docs/en/ftmswsfm324?topic=reference-cdp-commands</a></li>
<li><a href="https://www.cisco.com/c/en/us/td/docs/optical/cpt/r9_5/command/reference/cpt95_cr/cpt95_cr_chapter_01101.pdf" target="_blank" rel="noopener noreferrer">https://www.cisco.com/c/en/us/td/docs/optical/cpt/r9_5/command/reference/cpt95_cr/cpt95_cr_chapter_01101.pdf</a></li>
<li><a href="https://tower.edu.au/cdp-important-commands-and-its-use/" target="_blank" rel="noopener noreferrer">https://tower.edu.au/cdp-important-commands-and-its-use/</a></li>
</ul>]]></content:encoded>
            <category>LLDP</category>
            <category>CDP</category>
            <category>프로토콜</category>
            <category>명령어</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[private IPv4]]></title>
            <link>https://dldkffh.github.io/2024/02/06/private-ipv4</link>
            <guid>https://dldkffh.github.io/2024/02/06/private-ipv4</guid>
            <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[private IPv4 (사설망)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="private-ipv4-사설망">private IPv4 (사설망)<a href="https://dldkffh.github.io/2024/02/06/private-ipv4#private-ipv4-%EC%82%AC%EC%84%A4%EB%A7%9D" class="hash-link" aria-label="private IPv4 (사설망)에 대한 직접 링크" title="private IPv4 (사설망)에 대한 직접 링크">​</a></h3>
<ul>
<li><strong>사설망</strong>&nbsp;또는&nbsp;<strong>프라이빗 네트워크</strong>(private network)</li>
<li><a href="https://ko.m.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%84%B7" target="_blank" rel="noopener noreferrer">인터넷</a>&nbsp;어드레싱 아키텍처에서 사설&nbsp;<a href="https://ko.m.wikipedia.org/wiki/IP_%EC%A3%BC%EC%86%8C" target="_blank" rel="noopener noreferrer">IP 주소</a>&nbsp;공간을 이용하는 네트워크</li>
<li><a href="http://tools.ietf.org/html/rfc1918" target="_blank" rel="noopener noreferrer">RFC 1918</a>과&nbsp;<a href="http://tools.ietf.org/html/rfc4193" target="_blank" rel="noopener noreferrer">RFC 4193</a>&nbsp;표준 준수</li>
<li>가정, 사무실, 기업&nbsp;<a href="https://ko.m.wikipedia.org/wiki/%EB%9E%9C" target="_blank" rel="noopener noreferrer">랜</a>에 쓰임</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="주소-공간">주소 공간<a href="https://dldkffh.github.io/2024/02/06/private-ipv4#%EC%A3%BC%EC%86%8C-%EA%B3%B5%EA%B0%84" class="hash-link" aria-label="주소 공간에 대한 직접 링크" title="주소 공간에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>클래스 구분</th><th>클래스 개수</th><th>주소 개수</th><th>IP 주소 범위</th><th>서브넷 마스크</th></tr></thead><tbody><tr><td>클래스A</td><td>1개</td><td>16,777,216개</td><td>10.0.0.0~10.255.255.255</td><td>/24</td></tr><tr><td>클래스B</td><td>16개</td><td>1,048,576개</td><td>172.16.0.0~172.31.255.255</td><td>/20</td></tr><tr><td>클래스C</td><td>256개</td><td>65,536개</td><td>192.168.0.0~192.168.255.255</td><td>/16</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="특징">특징<a href="https://dldkffh.github.io/2024/02/06/private-ipv4#%ED%8A%B9%EC%A7%95" class="hash-link" aria-label="특징에 대한 직접 링크" title="특징에 대한 직접 링크">​</a></h3>
<ul>
<li>로컬 네트워크 내에서 작동하는 주소<!-- -->
<ul>
<li>주소들은 인터넷에서 라우팅할 수 없음</li>
<li>개인 IP 주소는 비용이 없음</li>
<li>고유한 개인 IP 주소는 동일한 네트워크에 있는 모든 장치에 제공<!-- -->
<ul>
<li>기본적으로 네트워크 라우터에 의해 특정 장치로 할당</li>
<li>LAN 관리자 또는 네트워크 운영자에 의해 할당</li>
</ul>
</li>
</ul>
</li>
<li>디바이스들은 전체 인터넷에 연결되지 않고 동일한 네트워크에서 서로 통신</li>
<li>개인 IP 주소는 특정 네트워크 내에서 더 많은 보안을 제공</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/06/private-ipv4#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://ko.m.wikipedia.org/wiki/%EC%82%AC%EC%84%A4%EB%A7%9D" target="_blank" rel="noopener noreferrer">https://ko.m.wikipedia.org/wiki/사설망</a></li>
<li><a href="https://www.geeksforgeeks.org/private-ip-addresses-in-networking/" target="_blank" rel="noopener noreferrer">https://www.geeksforgeeks.org/private-ip-addresses-in-networking/</a></li>
</ul>]]></content:encoded>
            <category>private</category>
            <category>IPv4</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[IPv6 주소 종류]]></title>
            <link>https://dldkffh.github.io/2024/02/02/ipv6-address-type</link>
            <guid>https://dldkffh.github.io/2024/02/02/ipv6-address-type</guid>
            <pubDate>Fri, 02 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[unicast]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="unicast">unicast<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#unicast" class="hash-link" aria-label="unicast에 대한 직접 링크" title="unicast에 대한 직접 링크">​</a></h3>
<ul>
<li>one-to-one 통신</li>
<li>단일 인터페이스에 대한 네트워크 계층 식별자</li>
<li>해당 IPv6 주소로 구성된 인터페이스로 전달</li>
</ul>
<ul>
<li>global unicast<!-- -->
<ul>
<li>2 or 3으로 시작, 예비되지 않는 모든 주소들</li>
<li>공인 IPv4 주소들과 같이 동작하는 주소들<!-- -->
<ul>
<li>필요한 기관들은 할당을 받아 사용</li>
<li>할당된 프리픽스로 시작하는 주소들만 사용</li>
<li>인터넷 라우팅이 가능</li>
</ul>
</li>
</ul>
</li>
<li>unique local<!-- -->
<ul>
<li>FD</li>
<li>사설 IPv4 주소들과 같이 동작하는 주소들<!-- -->
<ul>
<li>다수의 기관들이 동일한 주소 사용 가능</li>
<li>어떤 주소 등록 기관에도 등록할 필요 없음</li>
</ul>
</li>
</ul>
</li>
<li>link-local<!-- -->
<ul>
<li>FE80</li>
<li>유니캐스트 (멀티캐스트X)<!-- -->
<ul>
<li>싱글 호스트를 위한 것</li>
<li>링크로컬 주소로 보내진 패킷은 오직 하나의 IPv6 호스트에 의해 처리</li>
</ul>
</li>
<li>로컬 링크로만 전달<!-- -->
<ul>
<li>링크 로컬로 보낸 패킷은 로컬 데이터 링크(네트워크)를 벗어날 수 없음</li>
<li>라우터가 링크 로컬 주소가 목적지인 패킷은 전달 안함</li>
<li>동일한 로컬 링크에 있는 장치와 통신하는 데에만 사용</li>
</ul>
</li>
<li>자동으로 생성<!-- -->
<ul>
<li>모든 IPv6 호스트 인터페이스와 라우터 인터페이스는 자신의 링크 로컬 주소를 자동으로 생성</li>
<li>글로벌 유니캐스트 주소를 학습하기 전 몇가지 초기화 문제 해결 필요</li>
</ul>
</li>
<li>일반적으로 링크 로컬 주소는 하나의 서브넷이 동작 범위인 일부 오버헤드 프로토콜과 IPv6 경로의 다음 홉 주소로써 사용</li>
</ul>
</li>
<li>loopback<!-- -->
<ul>
<li>::1<!-- -->
<ul>
<li>이진수로 보았을때 앞의 127개는 0이고 나머지 1개가 1인 주소</li>
</ul>
</li>
<li>물리적 인터페이스에 할당되지 않은 주소</li>
<li>호스트가 IPv6 패킷을 자신에게 보내는 데 사용 가능</li>
</ul>
</li>
<li>unknown, unspecified<!-- -->
<ul>
<li>::<!-- -->
<ul>
<li>모두 0으로 이루어진 주소</li>
</ul>
</li>
<li>IPv6 주소가 없음을 나타냄</li>
<li>소스 주소로만 사용</li>
</ul>
</li>
<li>embedded IPv4<!-- -->
<ul>
<li>::/80</li>
<li>주소의 하위 32비트에 IPv4 주소를 전달하는 IPv6 주소</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multicast">multicast<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#multicast" class="hash-link" aria-label="multicast에 대한 직접 링크" title="multicast에 대한 직접 링크">​</a></h3>
<ul>
<li>one-to-many 통신</li>
<li>FF</li>
<li>well-known<!-- -->
<ul>
<li>ff00::/12</li>
</ul>
</li>
<li>transient<!-- -->
<ul>
<li>ff10::/12</li>
</ul>
</li>
<li>solicited-node<!-- -->
<ul>
<li>ff02:0:0:0:0:1:ff00::/104</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="anycast">anycast<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#anycast" class="hash-link" aria-label="anycast에 대한 직접 링크" title="anycast에 대한 직접 링크">​</a></h3>
<ul>
<li>특정 서비스를 지원하기 위해 두 라우터는 동일한 애니캐스트 주소를 설정</li>
<li>애니캐스트 주소로 전송된 패킷은 해당 주소로 식별되는 “가장 가까운” 인터페이스로 전달<!-- -->
<ul>
<li>“가장 가까운”은 일반적으로 IPv6 라우팅 프로토콜에 따라 최상의 라우팅 메트릭을 갖는 것을 의미</li>
</ul>
</li>
<li>one-to-closest 통신</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="broadcast">broadcast<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#broadcast" class="hash-link" aria-label="broadcast에 대한 직접 링크" title="broadcast에 대한 직접 링크">​</a></h3>
<ul>
<li>IPv6에는 브로드캐스트가 없음</li>
<li>브로드캐스트 기능은 멀티캐스트 주소를 사용해 구현됨</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="eui-64-인터페이스-생성시">EUI-64 인터페이스 생성시<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#eui-64-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%EC%8B%9C" class="hash-link" aria-label="EUI-64 인터페이스 생성시에 대한 직접 링크" title="EUI-64 인터페이스 생성시에 대한 직접 링크">​</a></h3>
<p>중간에 <strong>FFFE</strong> 넣는거임</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv4---ipv6-전환기술">IPv4 - IPv6 전환기술<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#ipv4---ipv6-%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0" class="hash-link" aria-label="IPv4 - IPv6 전환기술에 대한 직접 링크" title="IPv4 - IPv6 전환기술에 대한 직접 링크">​</a></h3>
<ul>
<li>dual stack(듀얼스택)<!-- -->
<ul>
<li>IPv4와 IPv6를 동시설정하여 통신상태에 따라 선택적으로 사용</li>
</ul>
</li>
<li>tunneling(터널링)<!-- -->
<ul>
<li>IPv4 네트워크를 경유하여 IPv6간 통신을 위한 방식으로 가상의 경로(터널)를 만들어 통신</li>
<li>IPv6패킷은 그 영역에 들어갈 때 IPv4패킷 내에 캡슐화되며 그 영역을 나올때 역캡슐</li>
</ul>
</li>
<li>translation(주소변환)<!-- -->
<ul>
<li>변환 헤더를 추가하여IPv4 주소와 IPv6 주소를 상호변환 하는 방식</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/02/02/ipv6-address-type#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://www.networkacademy.io/ccna/ipv6/ipv6-address-types" target="_blank" rel="noopener noreferrer">networkacademy - IPv6 Address Types</a></li>
<li><a href="https://www.cyber.co.kr/book/item/5604" target="_blank" rel="noopener noreferrer">시스코 네트워크 CCNA 자격증 공인 학습 가이드 CCENT/CCNA ICND1 100-105</a></li>
<li><a href="https://daengsik.tistory.com/9" target="_blank" rel="noopener noreferrer">IT Net Tech - 네트워크 기초 - IPv6</a></li>
</ul>]]></content:encoded>
            <category>IPv6</category>
            <category>unicast</category>
            <category>multicast</category>
            <category>anycast</category>
            <category>eui-64</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[Flooding(플러딩)]]></title>
            <link>https://dldkffh.github.io/2024/01/31/flooding</link>
            <guid>https://dldkffh.github.io/2024/01/31/flooding</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Flooding(플러딩, 홍수)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="flooding플러딩-홍수">Flooding(플러딩, 홍수)<a href="https://dldkffh.github.io/2024/01/31/flooding#flooding%ED%94%8C%EB%9F%AC%EB%94%A9-%ED%99%8D%EC%88%98" class="hash-link" aria-label="Flooding(플러딩, 홍수)에 대한 직접 링크" title="Flooding(플러딩, 홍수)에 대한 직접 링크">​</a></h3>
<ul>
<li>수신되는 링크 만을 제외하고 나머지 모든 링크에 패킷을 단순히 복사 전송<!-- -->
<ul>
<li>무제어 포트 배정</li>
</ul>
</li>
<li>MAC Flooding (MAC 플러딩)<!-- -->
<ul>
<li>목적지 주소가 멀티캐스트 또는 브로드캐스트 형태일 경우</li>
<li>목적지 주소가 자신의 MAC 주소 테이블에 존재하지 않은 경우</li>
<li>미인식 프로토콜</li>
<li>프레임 버퍼 메모리가 가득찬 경우</li>
<li>수신 포트를 제외한 나머지 모든 포트로 전달<!-- -->
<ul>
<li>폭주 위험</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/01/31/flooding#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="http://www.ktword.co.kr/test/view/view.php?m_temp1=1362&amp;id=851" target="_blank" rel="noopener noreferrer">정보통신기술용어해설 - Flooding, Flood Routing, Flooding Algorithm 플러딩, 홍수 라우팅, 플러딩 알고리즘</a></li>
</ul>]]></content:encoded>
            <category>flooding</category>
            <category>플러딩</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[네트워크 장비 종류 정리]]></title>
            <link>https://dldkffh.github.io/2024/01/31/network-devices</link>
            <guid>https://dldkffh.github.io/2024/01/31/network-devices</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Repeater(리피터) - Layer 1]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="repeater리피터---layer-1">Repeater(리피터) - Layer 1<a href="https://dldkffh.github.io/2024/01/31/network-devices#repeater%EB%A6%AC%ED%94%BC%ED%84%B0---layer-1" class="hash-link" aria-label="Repeater(리피터) - Layer 1에 대한 직접 링크" title="Repeater(리피터) - Layer 1에 대한 직접 링크">​</a></h3>
<ul>
<li>네트워크를 통해서 전송되는 신호 감쇠 문제를 해결하기 위한 장치<!-- -->
<ul>
<li>장거리 전송을 위해 신호를 증폭</li>
<li>네트워크 규모를 확장</li>
<li>무제한으로 신호가 연장되는 것은 아님</li>
</ul>
</li>
<li>Hub(허브)중에도 리피터 기능을 가진 것이 있음</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hub허브---layer-1">Hub(허브) - Layer 1<a href="https://dldkffh.github.io/2024/01/31/network-devices#hub%ED%97%88%EB%B8%8C---layer-1" class="hash-link" aria-label="Hub(허브) - Layer 1에 대한 직접 링크" title="Hub(허브) - Layer 1에 대한 직접 링크">​</a></h3>
<ul>
<li>여러 개의 시스템을 연결하는 경우 포트별로 케이블을 연결하여 사용</li>
<li>분배 장치의 역할<!-- -->
<ul>
<li>여러 개의 포트에서 신호를 입력받아 다시 여러 개의 포트로 신호를 송출</li>
</ul>
</li>
<li>기본적으로 물리계층에서 동작하나, 허브 특성에 따라 데이터링크 및 네트워크 계층에서도 동작</li>
<li>네트워크 상태 모니터링 가능</li>
<li>리피터 기능을 장착하고 있어 증폭기 역할도 수행</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="허브-종류">허브 종류<a href="https://dldkffh.github.io/2024/01/31/network-devices#%ED%97%88%EB%B8%8C-%EC%A2%85%EB%A5%98" class="hash-link" aria-label="허브 종류에 대한 직접 링크" title="허브 종류에 대한 직접 링크">​</a></h4>
<ul>
<li>Dummy Hub(더미허브)<!-- -->
<ul>
<li>시스템과 네트워크 장치 연결만 수행</li>
<li>5대의 시스템을 연겨하면 5대의 시스템이 대역폭을 나누어 사용<!-- -->
<ul>
<li>연결 된 시스템의 수가 증가하면 성능이 떨어짐</li>
</ul>
</li>
<li>리피터로 구성</li>
</ul>
</li>
<li>Active Hub(액티브 허브)<!-- -->
<ul>
<li>네트워크와 함께 신호를 정리, 증폭 및 중계할 수 있는 허브<!-- -->
<ul>
<li>리피터 역할 수행해 연장하는 데 도움</li>
</ul>
</li>
<li>원하는 신호 외에 잡음도 증폭</li>
<li>패시브 허브에 비해 가격이 매우 비쌈</li>
<li>전원 공급이 필요</li>
</ul>
</li>
<li>Passive Hub(패시브 허브)<!-- -->
<ul>
<li>단순히 네트워크 세그먼트의 신호를 결합<!-- -->
<ul>
<li>물리적 매체를 공유하는 데에만 사용</li>
<li>신호를 정리하고 증폭하지 않아 거리를 연장하는 데 사용할 수 없음</li>
</ul>
</li>
<li>소음을 증폭시키지 않음</li>
<li>액티브 허브에 비해 가격이 저렴</li>
<li>전원 공급이 필요하지 않음</li>
</ul>
</li>
<li>Intelligent Hub(지능형 허브)<!-- -->
<ul>
<li>SNMP 프로토콜을 사용해서 네트워크 관리 기능이 가능</li>
<li>마이크로프로세서 칩이 포함</li>
<li>활성 허브처럼 작동</li>
<li>원격 관리 기능 포함</li>
<li>유연한 데이터 속도 제공</li>
<li>허브를 통과하는 트래픽 모니터링</li>
<li>진단 기능<!-- -->
<ul>
<li>포트에 연결된 네트워크 연결상태를 점검</li>
<li>네트워크 상태 문제를 해결하는 데 매우 유용</li>
</ul>
</li>
</ul>
</li>
<li>Switching Hub(스위칭허브)<!-- -->
<ul>
<li>스위칭 기능이 추가되어 네트워크 효율을 향상</li>
<li>여러개의 포트에서 입력을 받아서 특정 포트로만 데이터를 전송할 수 있음</li>
<li>리피터 내장</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bridge브리지-브릿지---layer-2">Bridge(브리지, 브릿지) - Layer 2<a href="https://dldkffh.github.io/2024/01/31/network-devices#bridge%EB%B8%8C%EB%A6%AC%EC%A7%80-%EB%B8%8C%EB%A6%BF%EC%A7%80---layer-2" class="hash-link" aria-label="Bridge(브리지, 브릿지) - Layer 2에 대한 직접 링크" title="Bridge(브리지, 브릿지) - Layer 2에 대한 직접 링크">​</a></h3>
<ul>
<li>두 개의 LAN을 연결하는 연결장치로 송신 및 수신되는 통신량을 관리<!-- -->
<ul>
<li>송신 및 수신 되는 Frame(프레임)을 검사</li>
</ul>
</li>
<li>네트워크 범위를 확장하고 할 때 사용</li>
<li>서로 다른 물리적 네트워크를 연결할 수 있음<!-- -->
<ul>
<li>예시 : 이더넷과 토큰링 네트워크를 연결</li>
</ul>
</li>
<li>네크워크에 많은 컴퓨터를 연결</li>
<li>네트워크의 병목현상 감소</li>
<li>하드웨어 주소인 MAC 주소로 관리</li>
<li>입력 신호를 출력으로 전송하는 Forwarding(포워딩) 기능 수행</li>
<li>목적지 MAC 주소를 읽어서 필터링을 수행</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="브리지-종류">브리지 종류<a href="https://dldkffh.github.io/2024/01/31/network-devices#%EB%B8%8C%EB%A6%AC%EC%A7%80-%EC%A2%85%EB%A5%98" class="hash-link" aria-label="브리지 종류에 대한 직접 링크" title="브리지 종류에 대한 직접 링크">​</a></h4>
<ul>
<li>Transparent Bridges(투명 브리지)<!-- -->
<ul>
<li>존재를 전혀 인식하지 못하는 브리지<!-- -->
<ul>
<li>각 단말이 브리지의 존재를 전혀 모르게 한다는 의미</li>
<li>브리지가 네트워크에 추가되거나 삭제되었는지 여부에 관계없이 스테이션을 재구성할 필요 없음</li>
</ul>
</li>
<li>bridge forwarding(브리지 전달)과 bridge learning(브리지 학습)이라는 두 가지 프로세스를 사용</li>
<li>투명 브리지를 사용하여 LAN을 확장하는 경우에는 Bridging Loop 현상 등에 의하여 한계에 봉착</li>
</ul>
</li>
<li>Source Routing Bridges(소스 라우팅 브리지)<!-- -->
<ul>
<li>라우팅 작업이 소스 스테이션에 의해 수행</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="switch스위치---layer-2-3">Switch(스위치) - Layer 2, 3<a href="https://dldkffh.github.io/2024/01/31/network-devices#switch%EC%8A%A4%EC%9C%84%EC%B9%98---layer-2-3" class="hash-link" aria-label="Switch(스위치) - Layer 2, 3에 대한 직접 링크" title="Switch(스위치) - Layer 2, 3에 대한 직접 링크">​</a></h3>
<ul>
<li>Switching Hub(스위칭 허브) 혹은 Port Switching Hub(포트 스위칭 허브)라고도 함</li>
<li>Hub(허브)와 거의 유사하지만 스위치는 허브보다 전송 속도가 빠름</li>
<li>네트워크의 효율이 향상<!-- -->
<ul>
<li>네트워크에서 충돌이 발생하지 않도록 목적지의 포트로 직접 전송함</li>
</ul>
</li>
<li>충돌이 발생하지 않음<!-- -->
<ul>
<li>송신자 노드와 수신자 노드를 일대일로 연결</li>
</ul>
</li>
<li>빠른 데이터 전송 가능</li>
<li>송신 및 수신 노드의 수가 증가해도 네트워크의 속도는 저하되지 않음</li>
<li>포트별로 일정한 속도를 가지고 전송되는 Packet(패킷)에 대해서 감정이 어려움</li>
<li>불필요한 네트워크 전송 최소화</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="스위치-종류">스위치 종류<a href="https://dldkffh.github.io/2024/01/31/network-devices#%EC%8A%A4%EC%9C%84%EC%B9%98-%EC%A2%85%EB%A5%98" class="hash-link" aria-label="스위치 종류에 대한 직접 링크" title="스위치 종류에 대한 직접 링크">​</a></h4>
<ul>
<li>비관리형 스위치<!-- -->
<ul>
<li>이 스위치는 간단한 플러그 앤 플레이 설계</li>
<li>고급 구성 옵션을 제공하지 않음</li>
<li>소규모 네트워크에 적합</li>
<li>대규모 네트워크로의 확장으로 사용하기에 적합</li>
</ul>
</li>
<li>관리형 스위치<!-- -->
<ul>
<li>VLAN, QoS 및 링크 집계와 같은 고급 구성 옵션을 제공</li>
<li>크고 복잡한 네트워크에 적합</li>
<li>중앙 집중식 관리 가능</li>
</ul>
</li>
<li>스마트 스위치<!-- -->
<ul>
<li>관리형 스위치와 유사한 기능</li>
<li>일반적으로 설정 및 관리가 쉽움</li>
<li>중소규모 네트워크에 적합</li>
</ul>
</li>
<li>레이어 2 스위치<!-- -->
<ul>
<li>동일한 네트워크 세그먼트에 있는 장치 간에 데이터를 전달</li>
</ul>
</li>
<li>레이어 3 스위치<!-- -->
<ul>
<li>서로 다른 네트워크 세그먼트 간에 데이터를 라우팅</li>
<li>크고 복잡한 네트워크에서 자주 사용</li>
</ul>
</li>
<li>PoE 스위치<!-- -->
<ul>
<li>PoE(Power over Ethernet) 기능이 있음</li>
<li>전달하는 동일한 케이블을 통해 네트워크 장치에 전원을 공급</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="router라우터---layer-3">Router(라우터) - Layer 3<a href="https://dldkffh.github.io/2024/01/31/network-devices#router%EB%9D%BC%EC%9A%B0%ED%84%B0---layer-3" class="hash-link" aria-label="Router(라우터) - Layer 3에 대한 직접 링크" title="Router(라우터) - Layer 3에 대한 직접 링크">​</a></h3>
<ul>
<li>Internetworking(인터네트워킹) 장비<!-- -->
<ul>
<li>둘 이상의 서로 다른 네트워크를 연결<!-- -->
<ul>
<li>네트워크 간 하드웨어나 소프트웨어 모두를 연결</li>
</ul>
</li>
<li>IP 주소를 기반으로 데이터 패킷을 라우팅하는 스위치</li>
</ul>
</li>
<li>LAN과 WAN을 연결</li>
<li>TCP/IP 프로토콜을 지원</li>
<li>최신의 라우팅 테이블을 유지<!-- -->
<ul>
<li>주기적인 라우팅 브로드캐스트를 사용</li>
<li>동적으로 업데이트</li>
</ul>
</li>
<li>패킷에서 IP주소를 읽어서 경로를 결정</li>
<li>필터링 수행<!-- -->
<ul>
<li>특정 IP에서 유입되는 패킷이나 특정 IP로 전송되는 패킷에 대해 필터링 수행 가능</li>
</ul>
</li>
<li>Forwarding(포워딩) 수행<!-- -->
<ul>
<li>Broadcast(브로드캐스트)를 차단하거나 입력 인터페이스로 입력된 패킷을 출력 인터페이스로 전송</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gateway게이트웨이---all-layer">Gateway(게이트웨이) - All Layer<a href="https://dldkffh.github.io/2024/01/31/network-devices#gateway%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4---all-layer" class="hash-link" aria-label="Gateway(게이트웨이) - All Layer에 대한 직접 링크" title="Gateway(게이트웨이) - All Layer에 대한 직접 링크">​</a></h3>
<ul>
<li>다른 네트워크 간의 상호 연결을 위해 사용</li>
<li>프로토콜이 달라도 통신 가능<!-- -->
<ul>
<li>서로 다른 프로토콜 간에 변환을 수행</li>
</ul>
</li>
<li>Message(메시지) 변환<!-- -->
<ul>
<li>서로 다른 네트워크에서 사용하는 메시지 포팻 형식을 변환</li>
<li>예시 : ASCII 코드로 작성된 메시지를 EBCDIC 코드로 변환</li>
</ul>
</li>
<li>Protocol(프로토콜) 변환<!-- -->
<ul>
<li>서로 다른 종류의 프로토콜을 변환</li>
<li>예시 : TCP/IP 프로토콜과 ATM 프로토콜 간의 상호변환 수행</li>
</ul>
</li>
<li>Address(주소) 변환<!-- -->
<ul>
<li>서로 다른 주소를 변환</li>
<li>예시 : IPv4 주소와 IPv6 주소간에 변환을 수행</li>
</ul>
</li>
<li>Firewall(방화벽)<!-- -->
<ul>
<li>병화벽 역할 수행<!-- -->
<ul>
<li>서로 다른 네트워크를 연결하여 패킷 필터링</li>
</ul>
</li>
</ul>
</li>
<li>Proxy Server(프록시 서버)<!-- -->
<ul>
<li>프록시 서버를 통해 다른 네트워크로 접근<!-- -->
<ul>
<li>프록시 서버는 중계기 역할을 수행하는 것</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="brouter브루터---layer-2-3">Brouter(브루터) - Layer 2, 3<a href="https://dldkffh.github.io/2024/01/31/network-devices#brouter%EB%B8%8C%EB%A3%A8%ED%84%B0---layer-2-3" class="hash-link" aria-label="Brouter(브루터) - Layer 2, 3에 대한 직접 링크" title="Brouter(브루터) - Layer 2, 3에 대한 직접 링크">​</a></h3>
<ul>
<li>브리징 라우터</li>
<li>브리지와 라우터의 기능을 모두 결합<!-- -->
<ul>
<li>라우터로 작동하여 네트워크 전체에 패킷을 라우팅</li>
<li>브리지로 작동하여 근거리 통신망 트래픽을 필터링</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nicnetwork-interface-card---layer-1-2">NIC(Network Interface Card) - Layer 1, 2<a href="https://dldkffh.github.io/2024/01/31/network-devices#nicnetwork-interface-card---layer-1-2" class="hash-link" aria-label="NIC(Network Interface Card) - Layer 1, 2에 대한 직접 링크" title="NIC(Network Interface Card) - Layer 1, 2에 대한 직접 링크">​</a></h3>
<ul>
<li>네트워크에 연결하는 데 사용되는 네트워크 어댑터</li>
<li>LAN을 구축하기 위해 컴퓨터에 설치<!-- -->
<ul>
<li>칩에 고유 ID</li>
<li>케이블을 연결하는 커넥터<!-- -->
<ul>
<li>케이블은 컴퓨터와 라우터 또는 모뎀 사이의 인터페이스 역할</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/01/31/network-devices#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="http://www.ktword.co.kr/" target="_blank" rel="noopener noreferrer">정보통신기술용어해설</a></li>
<li><a href="https://www.geeksforgeeks.org/" target="_blank" rel="noopener noreferrer">GeeksforGeeks</a></li>
<li><a href="https://shop.youngjin.com/goods/view?no=69" target="_blank" rel="noopener noreferrer">이기적 네트워크관리사 1ㆍ2급 필기</a></li>
</ul>]]></content:encoded>
            <category>네트워크</category>
            <category>인프라</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[OSI Layer 1, 2]]></title>
            <link>https://dldkffh.github.io/2024/01/31/osi12</link>
            <guid>https://dldkffh.github.io/2024/01/31/osi12</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Layer 1 - Physical Layer (물리 계층)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="layer-1---physical-layer-물리-계층">Layer 1 - Physical Layer (물리 계층)<a href="https://dldkffh.github.io/2024/01/31/osi12#layer-1---physical-layer-%EB%AC%BC%EB%A6%AC-%EA%B3%84%EC%B8%B5" class="hash-link" aria-label="Layer 1 - Physical Layer (물리 계층)에 대한 직접 링크" title="Layer 1 - Physical Layer (물리 계층)에 대한 직접 링크">​</a></h3>
<ul>
<li>전기 및 기계 수준에서 네트워크를 통해 비트 스트림(전기 충격, 빛 또는 무선 신호)을 전달</li>
<li>케이블, 인터페이스 카드 및 물리적 측면 정의를 포함하여 데이터를 보내고 받는 하드웨어 수단을 제공</li>
</ul>
<ul>
<li>UTP<!-- -->
<ul>
<li>동축 케이블(더 이상 사용되지 않음), 연선 구리선 케이블, 광섬유 케이블 또는 무선을 통해 이더넷 LAN 연결 수행</li>
<li>구리 UTP(비차폐 연선) 케이블은 일반적으로 데스크톱 컴퓨터를 스위치에 연결하는데 사용</li>
<li>커넥터 유형은 RJ-45이고 최대 길이는 100미터</li>
<li>Straight-Trough (다이렉트) UTP Cable VS. Crossover (크로스오버) UTP Cable<!-- -->
<ul>
<li>UTP 케이블의 수신 및 전송 전선은 직선 또는 교차 방식으로 RJ-45 커넥터에 연결</li>
<li>다이렉트 케이블은 PC나 라우터와 같은 최종 장치를 스위치에 연결하는 데 사용</li>
<li>크로스오버 케이블은 장치를 직접 연결하는 데 사용<!-- -->
<ul>
<li>동일한 유형의 두 장치를 연결하는 데 가장 자주 사용</li>
</ul>
</li>
<li>최신 스위치는 수신 및 전송 신호가 자동으로 재구성되는 자동 MDIX를 지원<!-- -->
<ul>
<li>다이렉트 케이블을 써도 알아서 크로스오버 케이블처럼 작동한다는 뜻</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>광섬유 케이블<!-- -->
<ul>
<li>장거리 또는 더 높은 대역폭 요구 사항을 지원하는 데 사용</li>
<li>예시 : 캠퍼스의 별도 건물 간 또는 건물 내부의 연결 전환을 위한 스위치</li>
<li>Single Mode Fiber VS. Multi Mode Fiber<!-- -->
<ul>
<li>단일 모드는 더 높은 대역폭과 더 먼 거리를 지원하지만 비용이 더 많이 듦</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="layer-2---data-link-layer-데이터-링크-계층">Layer 2 - Data-Link Layer (데이터 링크 계층)<a href="https://dldkffh.github.io/2024/01/31/osi12#layer-2---data-link-layer-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%81%ED%81%AC-%EA%B3%84%EC%B8%B5" class="hash-link" aria-label="Layer 2 - Data-Link Layer (데이터 링크 계층)에 대한 직접 링크" title="Layer 2 - Data-Link Layer (데이터 링크 계층)에 대한 직접 링크">​</a></h3>
<ul>
<li>비트로 인코딩 및 디코딩</li>
<li>물리 계층에 대한 오류 감지 및 수정</li>
<li>Ethernet(이더넷)<!-- -->
<ul>
<li>LAN(Local Area Network)에서 사용되는 2계층 매체</li>
<li>LAN을 유선으로 구현하는 기술 방식</li>
<li>IEEE 802.3 규약으로 표준화</li>
<li>CSMA/CD 기법</li>
<li>48비트 16진수 MAC 주소를 사용</li>
</ul>
</li>
<li>미디어 액세스 제어 MAC Address<!-- -->
<ul>
<li>처음 24비트는 이더넷 포트 제조업체를 고유하게 식별하는 OUI(Organizationally Unique Identifier)<!-- -->
<ul>
<li>OUI는 IEEE에 의해 할당</li>
</ul>
</li>
<li>마지막 24비트는 공급업체가 할당</li>
<li>전 세계 모든 NIC 포트에 저장된 MAC 주소는 전역적으로 고유</li>
</ul>
</li>
</ul>]]></content:encoded>
            <category>OSI</category>
            <category>인프라</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[자주보는 TCP, UDP 프로토콜, 포트번호 정리]]></title>
            <link>https://dldkffh.github.io/2024/01/31/tcp-udp-protocol</link>
            <guid>https://dldkffh.github.io/2024/01/31/tcp-udp-protocol</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[TCP]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tcp">TCP<a href="https://dldkffh.github.io/2024/01/31/tcp-udp-protocol#tcp" class="hash-link" aria-label="TCP에 대한 직접 링크" title="TCP에 대한 직접 링크">​</a></h3>
<ul>
<li>FTP(21)</li>
<li>SSH(22)</li>
<li>Telnet(23)</li>
<li>HTTP(80)</li>
<li>HTTPS(443)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="udp">UDP<a href="https://dldkffh.github.io/2024/01/31/tcp-udp-protocol#udp" class="hash-link" aria-label="UDP에 대한 직접 링크" title="UDP에 대한 직접 링크">​</a></h3>
<ul>
<li>TFTP(69)</li>
<li>SNMP(161)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tcp--udp">TCP &amp; UDP<a href="https://dldkffh.github.io/2024/01/31/tcp-udp-protocol#tcp--udp" class="hash-link" aria-label="TCP &amp; UDP에 대한 직접 링크" title="TCP &amp; UDP에 대한 직접 링크">​</a></h3>
<ul>
<li>DNS(53)</li>
</ul>]]></content:encoded>
            <category>TCP</category>
            <category>UDP</category>
            <category>프로토콜</category>
            <category>인프라</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[Wi-Fi 기초]]></title>
            <link>https://dldkffh.github.io/2024/01/31/wifi</link>
            <guid>https://dldkffh.github.io/2024/01/31/wifi</guid>
            <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Wi-Fi(Wireless Fidelity, 와이파이)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wi-fiwireless-fidelity-와이파이">Wi-Fi(Wireless Fidelity, 와이파이)<a href="https://dldkffh.github.io/2024/01/31/wifi#wi-fiwireless-fidelity-%EC%99%80%EC%9D%B4%ED%8C%8C%EC%9D%B4" class="hash-link" aria-label="Wi-Fi(Wireless Fidelity, 와이파이)에 대한 직접 링크" title="Wi-Fi(Wireless Fidelity, 와이파이)에 대한 직접 링크">​</a></h3>
<ul>
<li>IEEE 802.11 표준을 기반</li>
<li>무선 근거리 네트워킹을 위한 기술</li>
</ul>
<ul>
<li>WLAN 네트워크와 AP(wireless access point, 무선 액세스 포인트)를 통해 인터넷에 연결<!-- -->
<ul>
<li>액세스 포인트(AP)는 하나 이상의 무선 장치를 동시에 인터넷에 연결</li>
<li>무선 LAN 기지국</li>
</ul>
</li>
<li>BSS(Basic Service Set)<!-- -->
<ul>
<li>WLAN의 기본 구성 요소</li>
<li>무선 이동국과 AP라고 불리는 선택적 중앙 기지국으로 구성<!-- -->
<ul>
<li>AP 없이 네트워크를 형성 가능</li>
<li>AP가 없는 BSS는 다른 BSS로 데이터를 보낼 수 없음<!-- -->
<ul>
<li>독립형 네트워크</li>
</ul>
</li>
<li>Ad-hoc 네트워크 또는 독립 BSS(IBSS)라고 합</li>
<li>AP가 없는 BSS는 임시 네트워크</li>
</ul>
</li>
</ul>
</li>
<li>ESS(Extended Service Set)<!-- -->
<ul>
<li>2개 이상의 BSS와 AP로 구성</li>
</ul>
</li>
</ul>
<br>
<ul>
<li>물리적 케이블을 사용하지 않고도 장치를 네트워크에 연결<!-- -->
<ul>
<li>이동성과 유연성이 향상</li>
</ul>
</li>
<li>고속 인터넷 액세스를 제공</li>
<li>최소한의 기술 지식만으로 설정 및 구성 가능<!-- -->
<ul>
<li>대부분의 최신 장치에는 Wi-Fi 연결이 내장</li>
</ul>
</li>
<li>스마트폰, 노트북, 태블릿, 스마트 홈 장치를 포함한 다양한 장치와 호환</li>
<li>동시에 여러 장치를 지원<!-- -->
<ul>
<li>여러 사용자가 동일한 네트워크에 연결하고 동시에 인터넷에 액세스</li>
</ul>
</li>
<li>라우터 유형과 사용 환경에 따라 광범위한 거리를 지원</li>
<li>다른 무선 장치 및 벽, 건물과 같은 물리적 장벽의 간섭 받음<!-- -->
<ul>
<li>네트워크 성능에 영향</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="출처">출처<a href="https://dldkffh.github.io/2024/01/31/wifi#%EC%B6%9C%EC%B2%98" class="hash-link" aria-label="출처에 대한 직접 링크" title="출처에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://www.geeksforgeeks.org/" target="_blank" rel="noopener noreferrer">GeeksforGeeks</a></li>
</ul>]]></content:encoded>
            <category>Wi-Fi</category>
            <category>인프라</category>
            <category>네트워크</category>
            <category>개념</category>
        </item>
        <item>
            <title><![CDATA[DNS로 이름 해결]]></title>
            <link>https://dldkffh.github.io/2023/10/15/dns</link>
            <guid>https://dldkffh.github.io/2023/10/15/dns</guid>
            <pubDate>Sun, 15 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[DNS (Domain Name System, 도메인 네임 시스템)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dns-domain-name-system-도메인-네임-시스템">DNS (Domain Name System, 도메인 네임 시스템)<a href="https://dldkffh.github.io/2023/10/15/dns#dns-domain-name-system-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C" class="hash-link" aria-label="DNS (Domain Name System, 도메인 네임 시스템)에 대한 직접 링크" title="DNS (Domain Name System, 도메인 네임 시스템)에 대한 직접 링크">​</a></h3>
<p>이름 해결에 사용되는 프로토콜</p>
<ul>
<li>인터넷을 IP 주소를 주소로 사용</li>
<li>IP 주소와 같은 숫자의 나열은 기억하기 어려워 IP에 '도메인명'이라는 이름을 부여</li>
<li>DNS는 사용 용도에 따라 UDP, TCP를 모두 사용</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="이름-해결은-udp">이름 해결은 UDP<a href="https://dldkffh.github.io/2023/10/15/dns#%EC%9D%B4%EB%A6%84-%ED%95%B4%EA%B2%B0%EC%9D%80-udp" class="hash-link" aria-label="이름 해결은 UDP에 대한 직접 링크" title="이름 해결은 UDP에 대한 직접 링크">​</a></h4>
<ul>
<li>이름 해결은 애플리케이션 통신에 앞서 행해지는 경우가 많아, 무엇보다 속도가 우선</li>
<li>UDP로 즉시성을 요구</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="존-전송은-tcp">존 전송은 TCP<a href="https://dldkffh.github.io/2023/10/15/dns#%EC%A1%B4-%EC%A0%84%EC%86%A1%EC%9D%80-tcp" class="hash-link" aria-label="존 전송은 TCP에 대한 직접 링크" title="존 전송은 TCP에 대한 직접 링크">​</a></h4>
<ul>
<li>대부분의 DNS 서버는 중복화를 도모하여 이름 해결 서비스 제공의 안정성 유지</li>
<li>DNS 서버는 IP주소와 도메인명의 정보를 '존 파일'에 보유</li>
<li>DNS 서버 중복성으로 사용하는 기능이 '존 전송 (zone transfer)', '존 파일'을 동기화하는 기능</li>
<li>'존 전송'에는 즉시성이 필요하지 않고 신뢰성이 중시되어 TCP를 사용</li>
</ul>]]></content:encoded>
            <category>DNS</category>
            <category>인프라</category>
            <category>네트워크</category>
            <category>개념</category>
            <category>인프라/네트워크 엔지니어를 위한 네트워크 이해 및 설계 가이드</category>
            <category>책</category>
        </item>
        <item>
            <title><![CDATA[NTP로 시각 맞추기]]></title>
            <link>https://dldkffh.github.io/2023/10/15/ntp</link>
            <guid>https://dldkffh.github.io/2023/10/15/ntp</guid>
            <pubDate>Sun, 15 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[NTP (Network Time Protocol)]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ntp-network-time-protocol">NTP (Network Time Protocol)<a href="https://dldkffh.github.io/2023/10/15/ntp#ntp-network-time-protocol" class="hash-link" aria-label="NTP (Network Time Protocol)에 대한 직접 링크" title="NTP (Network Time Protocol)에 대한 직접 링크">​</a></h3>
<p>장비의 시간 동기화를 위한 프로토콜</p>
<ul>
<li>여러 장비가 얽히는 문제점을 트러블슈팅해 나갈때 문제의 흐름을 시간 순으로 이해라는 것이 중요</li>
<li>'Stratum'이라는 값을 이용한 계층구조</li>
<li>Stratum은 최상위의 시간 생성원으로부터의 NTP 홉 수</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="udp의-유니캐스트">UDP의 유니캐스트<a href="https://dldkffh.github.io/2023/10/15/ntp#udp%EC%9D%98-%EC%9C%A0%EB%8B%88%EC%BA%90%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="UDP의 유니캐스트에 대한 직접 링크" title="UDP의 유니캐스트에 대한 직접 링크">​</a></h4>
<ul>
<li>유니캐스트, 멀티캐스트, 브로드캐스트 모든 통신 유형에서 동작</li>
<li>서버 시스템에서 사용하는 NTP는 유니캐스트뿐!</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="ntp-query">NTP Query<a href="https://dldkffh.github.io/2023/10/15/ntp#ntp-query" class="hash-link" aria-label="NTP Query에 대한 직접 링크" title="NTP Query에 대한 직접 링크">​</a></h5>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="ntp-reply">NTP Reply<a href="https://dldkffh.github.io/2023/10/15/ntp#ntp-reply" class="hash-link" aria-label="NTP Reply에 대한 직접 링크" title="NTP Reply에 대한 직접 링크">​</a></h5>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="동기화-간격은-변동">동기화 간격은 변동<a href="https://dldkffh.github.io/2023/10/15/ntp#%EB%8F%99%EA%B8%B0%ED%99%94-%EA%B0%84%EA%B2%A9%EC%9D%80-%EB%B3%80%EB%8F%99" class="hash-link" aria-label="동기화 간격은 변동에 대한 직접 링크" title="동기화 간격은 변동에 대한 직접 링크">​</a></h4>
<p>NTP 서버에 대한 동기화 간격은 사용하는 NTP 애플리케이션에 따라 다름</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="두-가지-모드">두 가지 모드<a href="https://dldkffh.github.io/2023/10/15/ntp#%EB%91%90-%EA%B0%80%EC%A7%80-%EB%AA%A8%EB%93%9C" class="hash-link" aria-label="두 가지 모드에 대한 직접 링크" title="두 가지 모드에 대한 직접 링크">​</a></h4>
<ul>
<li>
<p>단번에 맞추는 step 모드</p>
<ul>
<li>NTP 클라이언트의 시간이 진행하더라도 목표 시간으로 되돌림</li>
<li>스위치나 라우터 등 시간 정보를 중요한 부분으로 사용하지 않는 기기에 사용</li>
</ul>
</li>
<li>
<p>천천히 맞추는 slew 모드</p>
<ul>
<li>1초에 0.5밀리초씩 시간을 보정</li>
<li>클라이언트의 시간이 진행하더라도 시간을 되돌리지 않음</li>
</ul>
</li>
</ul>]]></content:encoded>
            <category>NTP</category>
            <category>인프라</category>
            <category>네트워크</category>
            <category>개념</category>
            <category>인프라/네트워크 엔지니어를 위한 네트워크 이해 및 설계 가이드</category>
            <category>책</category>
        </item>
        <item>
            <title><![CDATA[그리디 체육복]]></title>
            <link>https://dldkffh.github.io/2023/07/13/programmers-42862</link>
            <guid>https://dldkffh.github.io/2023/07/13/programmers-42862</guid>
            <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 코딩테스트 고득점 Kit 체육복]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="프로그래머스-코딩테스트-고득점-kit-체육복"><a href="https://school.programmers.co.kr/learn/courses/30/lessons/42862" target="_blank" rel="noopener noreferrer">프로그래머스 코딩테스트 고득점 Kit 체육복</a><a href="https://dldkffh.github.io/2023/07/13/programmers-42862#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B3%A0%EB%93%9D%EC%A0%90-kit-%EC%B2%B4%EC%9C%A1%EB%B3%B5" class="hash-link" aria-label="프로그래머스-코딩테스트-고득점-kit-체육복에 대한 직접 링크" title="프로그래머스-코딩테스트-고득점-kit-체육복에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="문제-설명">문제 설명<a href="https://dldkffh.github.io/2023/07/13/programmers-42862#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="문제 설명에 대한 직접 링크" title="문제 설명에 대한 직접 링크">​</a></h4>
<p>점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</p>
<p>전체 학생의 수 <code>n</code>, 체육복을 도난당한 학생들의 번호가 담긴 배열 <code>lost</code>, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 <code>reserve</code>가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 <code>return</code> 하도록 <code>solution</code> 함수를 작성해주세요.</p>
<ul>
<li>코니는 각 종류별로 최대 1가지 의상만 착용할 수 있습니다. 예를 들어 위 예시의 경우 동그란 안경과 검정 선글라스를 동시에 착용할 수는 없습니다.</li>
<li>착용한 의상의 일부가 겹치더라도, 다른 의상이 겹치지 않거나, 혹은 의상을 추가로 더 착용한 경우에는 서로 다른 방법으로 옷을 착용한 것으로 계산합니다.</li>
<li>코니는 하루에 최소 한 개의 의상은 입습니다.</li>
</ul>
<p>코니가 가진 의상들이 담긴 2차원 배열 <code>clothes</code>가 주어질 때 서로 다른 옷의 조합의 수를 <code>return</code> 하도록 <code>solution</code> 함수를 작성해주세요.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="제한사항">제한사항<a href="https://dldkffh.github.io/2023/07/13/programmers-42862#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="제한사항에 대한 직접 링크" title="제한사항에 대한 직접 링크">​</a></h4>
<ul>
<li>전체 학생의 수는 2명 이상 30명 이하입니다.</li>
<li>체육복을 도난당한 학생의 수는 1명 이상 <code>n</code>명 이하이고 중복되는 번호는 없습니다.</li>
<li>여벌의 체육복을 가져온 학생의 수는 1명 이상 <code>n</code>명 이하이고 중복되는 번호는 없습니다.</li>
<li>여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.</li>
<li>여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="풀이-포인트">풀이 포인트<a href="https://dldkffh.github.io/2023/07/13/programmers-42862#%ED%92%80%EC%9D%B4-%ED%8F%AC%EC%9D%B8%ED%8A%B8" class="hash-link" aria-label="풀이 포인트에 대한 직접 링크" title="풀이 포인트에 대한 직접 링크">​</a></h4>
<ul>
<li>직관적으로 코드를 짠다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="solutionjs">solution.js<a href="https://dldkffh.github.io/2023/07/13/programmers-42862#solutionjs" class="hash-link" aria-label="solution.js에 대한 직접 링크" title="solution.js에 대한 직접 링크">​</a></h4>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">javascrpt</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv codeBlockLinesWithNumbering_o6Pm"><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token keyword" style="font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">solution</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">n</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> lost</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> reserve</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> answer </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> student_list </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:rgb(255, 203, 107)">Array</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token keyword module" style="font-style:italic">from</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token literal-property property">length</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> n</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword control-flow" style="font-style:italic">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> i </span><span class="token keyword" style="font-style:italic">of</span><span class="token plain"> lost</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">-=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword control-flow" style="font-style:italic">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> i </span><span class="token keyword" style="font-style:italic">of</span><span class="token plain"> reserve</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword control-flow" style="font-style:italic">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token plain"> student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> i</span><span class="token operator" style="color:rgb(137, 221, 255)">++</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token keyword control-flow" style="font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token keyword control-flow" style="font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="font-style:italic">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">        student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">i </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  answer </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> student_list</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">filter</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain" style="display:inline-block"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain">  </span><span class="token keyword control-flow" style="font-style:italic">return</span><span class="token plain"> answer</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span></span><br></span><span class="token-line codeLine_lJS_" style="color:#bfc7d5"><span class="codeLineNumber_Tfdd"></span><span class="codeLineContent_feaV"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>그리디</category>
            <category>알고리즘</category>
            <category>javascrpt</category>
            <category>프로그래머스</category>
            <category>문제</category>
        </item>
    </channel>
</rss>